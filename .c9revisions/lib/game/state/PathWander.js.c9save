{"ts":1374072278524,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1374072288030,"patch":[[{"diffs":[[1,"/*global namespace*/\n\nvar states = namespace(\"Game.States\");\n\nstates.PathWander = function() {};\n\nstates.PathWander.prototype.execute = function(entity) {\n    // Get a target tile\n    if (!entity.targetX || !entity.targetY) {\n        entity.getTarget();\n    }\n    \n    if (!entity.moveProgress) {\n        entity.moveProgress = 0;\n    }\n    \n    entity.moveProgress += entity.speed;\n    \n    if (entity.moveProgress >= 1) {\n        entity.moveProgress -= 1;\n        entity.x = entity.targetX;\n        entity.y = entity.targetY;\n        // Get a new target\n        entity.getTarget();\n    }\n};"]],"start1":0,"start2":0,"length1":0,"length2":591}]],"length":591,"saved":false}
{"ts":1374072390445,"patch":[[{"diffs":[[0,"pace"],[1," Utils"],[0,"*/\n"],[-1,""],[0,"\nvar"]],"start1":14,"start2":14,"length1":11,"length2":17},{"diffs":[[0,"getY) {\n        "],[-1,"entity"],[1,"this"],[0,".getTarget();\n  "]],"start1":224,"start2":224,"length1":38,"length2":36},{"diffs":[[0,"argetY;\n"],[-1,""],[0,"        "]],"start1":523,"start2":523,"length1":16,"length2":16},{"diffs":[[0,"    }\n};"],[1,"\n\nstates.PathWander.prototype.getTarget = function(entity) {\n    entity.targetX = entity.x + Utils.randomOption([-1, 0, 1]);\n    entity.targetY = entity.y + Utils.randomOption([-1, 0, 1]);\n    if (!entity.world.isValidTile(entity.targetX, entity.targetY)) {\n        entity.getTarget();\n    }\n};"]],"start1":587,"start2":587,"length1":8,"length2":302}]],"length":889,"saved":false}
{"ts":1374072467631,"patch":[[{"diffs":[[0,"    "],[-1,"entity.targetX = entity.x + Utils.randomOption([-1, 0, 1]);\n    entity."],[1,"var "],[0,"target"],[-1,"Y"],[1,"X"],[0," = e"]],"start1":656,"start2":656,"length1":86,"length2":19},{"diffs":[[0,"ity."],[-1,"y + Utils.randomOption([-1, 0, 1]);\n    if (!entity.world.isValidTile(entity.targetX, entity.targetY)) {\n        entity.getTarget();\n    }"],[1,"world.size * Math.random();"],[0,"\n};"]],"start1":677,"start2":677,"length1":145,"length2":34}]],"length":711,"saved":false}
{"ts":1374072490432,"patch":[[{"diffs":[[0,"rgetX = "],[1,"Math.floor("],[0,"entity.w"]],"start1":666,"start2":666,"length1":16,"length2":27},{"diffs":[[0,"random()"],[1,");\n    var targetY = Math.floor(entity.world.size * Math.Random())"],[0,";\n};"]],"start1":710,"start2":710,"length1":12,"length2":78}]],"length":788,"saved":false}
{"ts":1374072511110,"patch":[[{"diffs":[[0,"tity) {\n    "],[-1,"var "],[1,"entity."],[0,"targetX = Ma"]],"start1":648,"start2":648,"length1":28,"length2":31},{"diffs":[[0,"));\n    "],[-1,"var "],[1,"entity."],[0,"targetY "]],"start1":720,"start2":720,"length1":20,"length2":23}]],"length":794,"saved":false}
{"ts":1374072514963,"patch":[[{"diffs":[[0,"ath."],[-1,"R"],[1,"r"],[0,"ando"]],"start1":777,"start2":777,"length1":9,"length2":9}]],"length":794,"saved":false}
{"ts":1374134640646,"patch":[[{"diffs":[[0,"tion() {"],[1,"\n    states.State.call(this, \"PathWander\");\n"],[0,"};\n\nstat"]],"start1":92,"start2":92,"length1":16,"length2":60}]],"length":838,"saved":false}
{"ts":1374134663960,"patch":[[{"diffs":[[0,"er\");\n};"],[1,"\nstates.PathWander.prototype = new states.State();"],[0,"\n\nstates"]],"start1":138,"start2":138,"length1":16,"length2":66}]],"length":888,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374480230357,"patch":[[{"diffs":[[0,"s.State();\n\n"],[1,"states.PathWander.prototype.enter = function(entity) {};\n\n"],[0,"states.PathW"]],"start1":186,"start2":186,"length1":24,"length2":82},{"diffs":[[0,"andom());\n};"],[1,"\n\nstates.PathWander.prototype.aStart = function(entity) {\n    var closedSet = [];\n    var openSet = entity.world.getTile(entity.x, entity.y);\n};"]],"start1":934,"start2":934,"length1":12,"length2":156}]],"length":1090,"saved":false}
{"ts":1374480558272,"patch":[[{"diffs":[[0," this.getTarget("],[-1,""],[0,""],[1,"entity"],[0,");\n    }\n    \n  "]],"start1":391,"start2":391,"length1":32,"length2":38},{"diffs":[[0,"        "],[-1,"entity"],[1,"this"],[0,".getTarg"]],"start1":717,"start2":717,"length1":22,"length2":20},{"diffs":[[0,"tTarget("],[1,"entity"],[0,");\n    }"]],"start1":732,"start2":732,"length1":16,"length2":22},{"diffs":[[0,"var "],[-1,"closedSet = [];\n    var openSet = entity.world.getTile(entity.x, entity.y);"],[1,"startTile = entity.world.getTile(entity.x, entity.y);\n    var closedSet = [];\n    var openSet = [startTile];\n    var cameFrom;\n    var g_score;\n    var f_score;\n    \n    g_score[startTile] = 0;\n    f_score[startTile] = g_score[startTile] + this.heuristic_cost_estimate(startTile)"],[0,"\n};"]],"start1":1018,"start2":1018,"length1":82,"length2":286}]],"length":1304,"saved":false}
{"ts":1374481115438,"patch":[[{"diffs":[[0,"ar start"],[-1,"Tile"],[0," = entit"]],"start1":1019,"start2":1019,"length1":20,"length2":16},{"diffs":[[0," entity.y);\n"],[1,"    var goal = entity.world.getTile(this.targetX, this.targetY);\n"],[0,"    var clos"]],"start1":1060,"start2":1060,"length1":24,"length2":89},{"diffs":[[0,"= [start"],[-1,"Tile"],[0,"];\n    v"]],"start1":1177,"start2":1177,"length1":20,"length2":16},{"diffs":[[0,"_score[start"],[-1,"Tile"],[0,"] = 0;\n    f"]],"start1":1250,"start2":1250,"length1":28,"length2":24},{"diffs":[[0,"re[start"],[-1,"Tile"],[0,"] = g_sc"]],"start1":1278,"start2":1278,"length1":20,"length2":16},{"diffs":[[0,"re[start"],[-1,"Tile"],[0,"] + this"]],"start1":1295,"start2":1295,"length1":20,"length2":16},{"diffs":[[0,"tart"],[-1,"Tile)"],[1,", goal);\n    \n    while (openSet.length > 0) {\n        var current = this.getLowestFScore(openSet, f_score); //the node in openset with lowest f_score\n        if (current == goal)\n            return this.reconstructPath(cameFrom, goal);\n        \n        // remove current from openset\n        var index = openSet.indexOf(current);\n        openSet.splice(index, 1);\n        // add current to closedset\n        closedSet.push(current);\n        \n        // for each neightbour\n        var neighbours = entity.world.neighboursFor(current);\n        for (var i = 0; i < neighbours.length; i++) {\n            \n        }\n    }"],[0,"\n};"]],"start1":1337,"start2":1337,"length1":12,"length2":625}]],"length":1962,"saved":false}
{"ts":1374481333545,"patch":[[{"diffs":[[0,") {\n            "],[1,"var neighbour = neighbours[i];\n            var tentative_g_score = g_score[current] + this.dist_between(current, neighbour);\n            if (openSet.indexOf(neighbour == -1) && tentative_g_score >= g_score[neighbour])\n                continue;"],[0,"\n        }\n    }"]],"start1":1927,"start2":1927,"length1":32,"length2":275}]],"length":2205,"saved":false}
{"ts":1374481890226,"patch":[[{"diffs":[[0,"r closed"],[-1,"S"],[1,"s"],[0,"et = [];"]],"start1":1143,"start2":1143,"length1":17,"length2":17},{"diffs":[[0,"var open"],[-1,"S"],[1,"s"],[0,"et = [st"]],"start1":1165,"start2":1165,"length1":17,"length2":17},{"diffs":[[0,"var came"],[-1,"F"],[1,"_f"],[0,"rom;\n   "]],"start1":1192,"start2":1192,"length1":17,"length2":18},{"diffs":[[0,"le (open"],[-1,"S"],[1,"s"],[0,"et.lengt"]],"start1":1363,"start2":1363,"length1":17,"length2":17},{"diffs":[[0,"ore(open"],[-1,"S"],[1,"s"],[0,"et, f_sc"]],"start1":1428,"start2":1428,"length1":17,"length2":17},{"diffs":[[0,"ath(came"],[-1,"F"],[1,"_f"],[0,"rom, goa"]],"start1":1558,"start2":1558,"length1":17,"length2":18},{"diffs":[[0,"index = open"],[-1,"S"],[1,"s"],[0,"et.indexOf(c"]],"start1":1640,"start2":1640,"length1":25,"length2":25},{"diffs":[[0,"    open"],[-1,"S"],[1,"s"],[0,"et.splic"]],"start1":1678,"start2":1678,"length1":17,"length2":17},{"diffs":[[0,"  closed"],[-1,"S"],[1,"s"],[0,"et.push("]],"start1":1750,"start2":1750,"length1":17,"length2":17},{"diffs":[[0,"if (open"],[-1,"S"],[1,"set.indexOf(neighbour) > 0 && tentative_g_score >= g_score[neighbour])\n                continue;\n                \n            if (opens"],[0,"et.index"]],"start1":2082,"start2":2082,"length1":17,"length2":151},{"diffs":[[0,"bour"],[1,")"],[0," == -1"],[-1,") && tentative_g_score >= g_score[neighbour])\n                continue;\n        }"],[1," || tentative_g_score < g_score[neighbour]) {\n                came_from[neighbour] = current;\n                g_score[neighbour] = tentative_g_score;\n                f_score[neighbour] = g_score[neighbour] + this.heuristic_cost_estimate(neighbour, goal);\n                if (openset.indexOf(neighbour) == -1) {\n                    openset.push(neighbour);\n                }\n            }\n        }\n    }\n    // return failure\n    return null;\n};\n\nstates.PathWander.prototype.reconstructPath = function(came_from, current_node) {\n    // if current node in came from\n    if (came_from[current_node]) {\n        var p = this.reconstructPath(came_from, came_from[current_node])\n        p.push(current_node);\n        return p;\n    } else {\n        return [current_node];"],[0,"\n    }\n}"],[-1,";"]],"start1":2241,"start2":2241,"length1":100,"length2":783}]],"length":3024,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374492919000,"patch":[[{"diffs":[[0,"n null;\n};\n\n"],[1,"states.PathWander.prototype.dist_between = function(tileA, tileB) {\n    if (tileA.x == tileB.x || tileA.y == tileB.y) {\n        return 1;\n    } else return 1.4;\n}\n\n"],[0,"states.PathW"]],"start1":2687,"start2":2687,"length1":24,"length2":188}]],"length":3188,"saved":false}
{"ts":1374492956965,"patch":[[{"diffs":[[0,"] + "],[-1,"this.dist_between(current, neighbour)"],[1,"1"],[0,";\n  "]],"start1":2027,"start2":2027,"length1":45,"length2":9},{"diffs":[[0,"};\n\n"],[-1,"states.PathWander.prototype.dist_between = function(tileA, tileB) {\n    if (tileA.x == tileB.x || tileA.y == tileB.y) {\n        return 1;\n    } else return 1.4;\n}\n\n"],[0,"stat"]],"start1":2659,"start2":2659,"length1":172,"length2":8}]],"length":2988,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374653311233,"patch":[[{"diffs":[[0,"ntity) {"],[1,"\n    this.getTarget(entity);\n    var path = this.aStar(entity);\n"],[0,"};\n\nstat"]],"start1":244,"start2":244,"length1":16,"length2":80},{"diffs":[[0,"tity) {\n    "],[-1,"entity"],[1,"this"],[0,".targetX = M"]],"start1":874,"start2":874,"length1":30,"length2":28},{"diffs":[[0,"));\n    "],[-1,"entity"],[1,"this"],[0,".targetY"]],"start1":944,"start2":944,"length1":22,"length2":20},{"diffs":[[0,"pe.aStar"],[-1,"t"],[0," = funct"]],"start1":1043,"start2":1043,"length1":17,"length2":16}]],"length":3047,"saved":false}
{"ts":1374653862989,"patch":[[{"diffs":[[0," var g_score"],[1," = {}"],[0,";\n    var f_"]],"start1":1269,"start2":1269,"length1":24,"length2":29},{"diffs":[[0," var f_score"],[1," = {}"],[0,";\n    \n    g"]],"start1":1291,"start2":1291,"length1":24,"length2":29}]],"length":3057,"saved":false}
{"ts":1374654059069,"patch":[[{"diffs":[[0,"n null;\n};\n\n"],[1,"states.PathWander.prototype.straightLineDistance = function(start, end) {\n    var xDiff = Math.abs(start.x - end.x);\n    var yDiff = Math.abs(start.y - end.y);\n    return Math.sqrt(xDiff + yDiff);\n}\n\n"],[0,"states.PathW"]],"start1":2720,"start2":2720,"length1":24,"length2":224}]],"length":3257,"saved":false}
{"ts":1374654098216,"patch":[[{"diffs":[[0,"rt(xDiff"],[-1," + "],[1,"*xDiff + yDiff*"],[0,"yDiff);\n"]],"start1":2910,"start2":2910,"length1":19,"length2":31}]],"length":3269,"saved":false}
{"ts":1374654111155,"patch":[[{"diffs":[[0,"y);\n    "],[-1,"return"],[1,"var dist ="],[0," Math.sq"]],"start1":2888,"start2":2888,"length1":22,"length2":26},{"diffs":[[0,"yDiff);\n"],[1,"    return dist;\n"],[0,"}\n\nstate"]],"start1":2937,"start2":2937,"length1":16,"length2":33}]],"length":3290,"saved":false}
{"ts":1374654125912,"patch":[[{"diffs":[[0," + this."],[-1,"heuristic_cost_estimat"],[1,"straightLineDistanc"],[0,"e(start,"]],"start1":1374,"start2":1374,"length1":38,"length2":35}]],"length":3287,"saved":false}
{"ts":1374654197889,"patch":[[{"diffs":[[0,"var xDiff = "],[-1,"Math.abs("],[0,"start.x - en"]],"start1":2807,"start2":2807,"length1":33,"length2":24},{"diffs":[[0," - end.x"],[-1,")"],[0,";\n    va"]],"start1":2826,"start2":2826,"length1":17,"length2":16},{"diffs":[[0,"f = "],[-1,"Math.abs("],[0,"star"]],"start1":2848,"start2":2848,"length1":17,"length2":8},{"diffs":[[0," - end.y"],[-1,")"],[0,";\n    va"]],"start1":2859,"start2":2859,"length1":17,"length2":16}]],"length":3267,"saved":false}
{"ts":1374654419564,"patch":[[{"diffs":[[0,"n null;\n};\n\n"],[1,"states.PathWander.prototype.getLowestFScore = function(openset, f_score) {\n    var lowestSoFar;\n    var toReturn;\n    for (var i = 0; i < openset.length; i++) {\n        var tile = openset[i];\n        var score = f_score[tile];\n        if (!lowestSoFar || score < lowestSoFar) {\n            lowestSoFar = score;\n            toReturn = tile;\n        }\n    }\n};\n\n"],[0,"states.PathW"]],"start1":2717,"start2":2717,"length1":24,"length2":384},{"diffs":[[0,"art, end) {\n"],[-1,""],[0,"    var xDif"]],"start1":3151,"start2":3151,"length1":24,"length2":24},{"diffs":[[0," dist;\n}"],[1,";"],[0,"\n\nstates"]],"start1":3292,"start2":3292,"length1":16,"length2":17},{"diffs":[[0,"t_node])"],[1,";"],[0,"\n       "]],"start1":3520,"start2":3520,"length1":16,"length2":17},{"diffs":[[0,"nt_node];\n    }\n"],[-1,""],[0,"}"],[1,";"]],"start1":3612,"start2":3612,"length1":17,"length2":18}]],"length":3630,"saved":false}
{"ts":1374654556044,"patch":[[{"diffs":[[0,"y.world."],[-1,"n"],[1,"getN"],[0,"eighbour"]],"start1":1913,"start2":1913,"length1":17,"length2":20}]],"length":3654,"saved":false}
{"ts":1374654935114,"patch":[[{"diffs":[[0,"ame_from"],[1," = {}"],[0,";\n    va"]],"start1":1256,"start2":1256,"length1":16,"length2":21}]],"length":3659,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374655353219,"patch":[[{"diffs":[[0,"ghbours[i];\n"],[1,"            var currentGScore = g_score[current];\n"],[0,"            "]],"start1":2038,"start2":2038,"length1":24,"length2":74},{"diffs":[[0,"score = "],[-1,"g_score["],[0,"current"],[-1,"]"],[1,"GScore"],[0," + 1;\n  "]],"start1":2128,"start2":2128,"length1":32,"length2":29},{"diffs":[[0,"his."],[-1,"heuristic_cost_estimat"],[1,"straightLineDistanc"],[0,"e(ne"]],"start1":2546,"start2":2546,"length1":30,"length2":27},{"diffs":[[0,"    }\n    }\n"],[1,"    return toReturn;\n"],[0,"};\n\nstates.P"]],"start1":3125,"start2":3125,"length1":24,"length2":45}]],"length":3703,"saved":false}
{"ts":1374655368777,"patch":[[{"diffs":[[0,"ore + 1;"],[1,"  // assume distance of 1 between all neighbours"],[0,"\n       "]],"start1":2146,"start2":2146,"length1":16,"length2":64}]],"length":3751,"saved":false}
{"ts":1374655412668,"patch":[[{"diffs":[[0,"    "],[-1,"f_score[neighbour] = g_score[neighbour]"],[1,"var neighbourGScore = g_score[neighbour];\n                f_score[neighbour] = neighbourGScore"],[0," + t"]],"start1":2547,"start2":2547,"length1":47,"length2":102}]],"length":3806,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374738236776,"patch":[[{"diffs":[[0,"y);\n    "],[-1,"var "],[1,"this."],[0,"path = t"]],"start1":277,"start2":277,"length1":20,"length2":21}]],"length":3807,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374738933416,"patch":[[{"diffs":[[0,"ighbour, goal);\n"],[1,"                var fScores = f_score.length;\n"],[0,"                "]],"start1":2677,"start2":2677,"length1":32,"length2":78}]],"length":3853,"saved":false}
{"ts":1374739300684,"patch":[[{"diffs":[[0,"re[neighbour"],[1,".toString()"],[0,"] = neighbou"]],"start1":2615,"start2":2615,"length1":24,"length2":35},{"diffs":[[0,"l);\n"],[-1,"                var fScores = f_score.length;\n"],[0,"    "]],"start1":2700,"start2":2700,"length1":54,"length2":8}]],"length":3818,"saved":false}
{"ts":1374739443098,"patch":[[{"diffs":[[0,"e = "],[-1,"{};\n    var f_score = {}"],[1,"new Utils.ToStringMap();\n    var f_score = new Utils.ToStringMap()"],[0,";\n  "]],"start1":1286,"start2":1286,"length1":32,"length2":74}]],"length":3860,"saved":false}
{"ts":1374739621890,"patch":[[{"diffs":[[0,"core"],[-1,"["],[1,".put("],[0,"start"],[-1,"] ="],[1,","],[0," 0"],[1,")"],[0,";\n  "]],"start1":1370,"start2":1370,"length1":19,"length2":22},{"diffs":[[0,"core"],[-1,"["],[1,".put("],[0,"start"],[-1,"] ="],[1,","],[0," g_s"]],"start1":1397,"start2":1397,"length1":17,"length2":19},{"diffs":[[0,"start, goal)"],[1,")"],[0,";\n    \n    w"]],"start1":1456,"start2":1456,"length1":24,"length2":25},{"diffs":[[0,"core"],[-1,"["],[1,".get("],[0,"current"],[-1,"]"],[1,")"],[0,";\n  "]],"start1":2134,"start2":2134,"length1":17,"length2":21},{"diffs":[[0,"score >= g_score"],[-1,"["],[1,".get("],[0,"neighbour])\n    "]],"start1":2318,"start2":2318,"length1":33,"length2":37},{"diffs":[[0,"eighbour"],[-1,"]"],[1,")"],[0,")\n      "]],"start1":2340,"start2":2340,"length1":17,"length2":17},{"diffs":[[0,"_score < g_score"],[-1,"["],[1,".get("],[0,"neighbour]) {\n  "]],"start1":2457,"start2":2457,"length1":33,"length2":37},{"diffs":[[0,"eighbour"],[-1,"]"],[1,")"],[0,") {\n    "]],"start1":2479,"start2":2479,"length1":17,"length2":17},{"diffs":[[0,"         g_score"],[-1,"["],[1,".put("],[0,"neighbour] = ten"]],"start1":2547,"start2":2547,"length1":33,"length2":37},{"diffs":[[0,"eighbour"],[-1,"] ="],[1,","],[0," tentati"]],"start1":2569,"start2":2569,"length1":19,"length2":17},{"diffs":[[0,"tive_g_score"],[1,")"],[0,";\n          "]],"start1":2584,"start2":2584,"length1":24,"length2":25},{"diffs":[[0,"re = g_score"],[-1,"["],[1,".get("],[0,"neighbour];\n"]],"start1":2632,"start2":2632,"length1":25,"length2":29},{"diffs":[[0,"eighbour"],[-1,"]"],[1,")"],[0,";\n      "]],"start1":2650,"start2":2650,"length1":17,"length2":17},{"diffs":[[0," f_score"],[-1,"["],[1,".put("],[0,"neighbou"]],"start1":2676,"start2":2676,"length1":17,"length2":21},{"diffs":[[0,"bour"],[-1,".toString()] ="],[1,","],[0," nei"]],"start1":2694,"start2":2694,"length1":22,"length2":9},{"diffs":[[0,"hbour, goal)"],[1,")"],[0,";\n          "]],"start1":2748,"start2":2748,"length1":24,"length2":25},{"diffs":[[0,"core"],[-1,"["],[1,".get("],[0,"tile"],[-1,"]"],[1,")"],[0,";\n  "]],"start1":3170,"start2":3170,"length1":14,"length2":18}]],"length":3881,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374826946293,"patch":[[{"diffs":[[0,"m = "],[-1,"{}"],[1,"new Utils.ToStringMap()"],[0,";\n  "]],"start1":1264,"start2":1264,"length1":10,"length2":31},{"diffs":[[0," g_score"],[-1,"["],[1,".get("],[0,"start"],[-1,"]"],[1,")"],[0," + this."]],"start1":1433,"start2":1433,"length1":23,"length2":27},{"diffs":[[0,"hbour) >"],[-1,""],[0,""],[1,"="],[0," 0 && te"]],"start1":2317,"start2":2317,"length1":16,"length2":17},{"diffs":[[0,"ame_from"],[-1,"["],[1,".put("],[0,"neighbou"]],"start1":2535,"start2":2535,"length1":17,"length2":21},{"diffs":[[0,"bour"],[-1,"] ="],[1,","],[0," current"],[1,")"],[0,";\n  "]],"start1":2553,"start2":2553,"length1":19,"length2":18},{"diffs":[[0,"Return;\n};\n\n"],[1,"states.PathWander.prototype.actualDistance = function(start, end) {\n    var xDiff = Math.abs(start.x - end.x);\n    var yDiff = Math.abs(start.y - end.y);\n    var dist = Math.max(xDiff, yDiff);\n    return dist;\n};\n\n"],[0,"states.PathW"]],"start1":3357,"start2":3357,"length1":24,"length2":238},{"diffs":[[0,"var xDiff = "],[1,"Math.abs("],[0,"start.x - en"]],"start1":3661,"start2":3661,"length1":24,"length2":33},{"diffs":[[0," - end.x"],[1,")"],[0,";\n    va"]],"start1":3689,"start2":3689,"length1":16,"length2":17},{"diffs":[[0,"yDiff = "],[1,"Math.abs("],[0,"start.y "]],"start1":3708,"start2":3708,"length1":16,"length2":25},{"diffs":[[0," - end.y"],[1,")"],[0,";\n    va"]],"start1":3732,"start2":3732,"length1":16,"length2":17},{"diffs":[[0,"+ yDiff*yDiff);\n"],[1,"    //var dist = Math.max(xDiff, yDiff);\n"],[0,"    return dist;"]],"start1":3780,"start2":3780,"length1":32,"length2":73},{"diffs":[[0,"   if (came_from"],[-1,"["],[1,".get("],[0,"current_node]) {"]],"start1":3977,"start2":3977,"length1":33,"length2":37},{"diffs":[[0,"ent_node"],[-1,"]"],[1,")"],[0,") {\n    "]],"start1":4002,"start2":4002,"length1":17,"length2":17},{"diffs":[[0,"ame_from"],[-1,"["],[1,".get("],[0,"current_"]],"start1":4064,"start2":4064,"length1":17,"length2":21},{"diffs":[[0,"ent_node"],[-1,"]"],[1,")"],[0,");\n     "]],"start1":4081,"start2":4081,"length1":17,"length2":17}]],"length":4193,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374848127835,"patch":[[{"diffs":[[0,"art) + this."],[-1,"straightLine"],[1,"actual"],[0,"Distance(sta"]],"start1":1448,"start2":1448,"length1":36,"length2":30},{"diffs":[[0," + this."],[-1,"straightLine"],[1,"actual"],[0,"Distance"]],"start1":2738,"start2":2738,"length1":28,"length2":22},{"diffs":[[0,"n null;\n};\n\n"],[1,"states.PathWander.prototype.getNeighbourDistance = function(tile, neighbour) {\n    if (tile.x == neighbour.x || tile.y == neighbour.y) {\n        return 1;\n    } else return 1.4;\n};\n\n"],[0,"states.PathW"]],"start1":2960,"start2":2960,"length1":24,"length2":206}]],"length":4363,"saved":false}
{"ts":1374848144455,"patch":[[{"diffs":[[0,"Score + "],[-1,"1"],[1,"this.getNeighbourDistance(current, neighbour)"],[0,";  // as"]],"start1":2216,"start2":2216,"length1":17,"length2":61}]],"length":4407,"saved":false}
{"ts":1374848150064,"patch":[[{"diffs":[[0,"ur);"],[-1,"  // assume distance of 1 between all neighbours"],[0,"\n   "]],"start1":2266,"start2":2266,"length1":56,"length2":8}]],"length":4359,"saved":false}
{"ts":1374848160473,"patch":[[{"diffs":[[0,"eturn dist;\n};\n\n"],[1,"states.PathWander.prototype.manhattanDistance = function(start, end) {\n    var xDiff = Math.abs(start.x - end.x);\n    var yDiff = Math.abs(start.y - end.y);\n    var dist = Math.max(xDiff, yDiff);\n    return dist;\n};\n\n"],[0,"states.PathWande"]],"start1":3733,"start2":3733,"length1":32,"length2":249}]],"length":4576,"saved":false}
{"ts":1374848216317,"patch":[[{"diffs":[[0," dist = "],[-1,"Math.max("],[0,"xDiff"],[-1,","],[1," +"],[0," yDiff"],[-1,")"],[0,";\n    re"]],"start1":3913,"start2":3913,"length1":38,"length2":29}]],"length":4567,"saved":false}
{"ts":1374848242620,"patch":[[{"diffs":[[0,"t(start) + this."],[-1,"actual"],[1,"manhattan"],[0,"Distance(start, "]],"start1":1444,"start2":1444,"length1":38,"length2":41},{"diffs":[[0," + this."],[-1,"actual"],[1,"manhattan"],[0,"Distance"]],"start1":2737,"start2":2737,"length1":22,"length2":25}]],"length":4573,"saved":false}
{"ts":1374848687217,"patch":[[{"diffs":[[0,"            if ("],[-1,"open"],[1,"closed"],[0,"set.indexOf(neig"]],"start1":2274,"start2":2274,"length1":36,"length2":38}]],"length":4575,"saved":false}
{"ts":1374849131724,"patch":[[{"diffs":[[0,"ntity);\n"],[1,"    this.nextTile = this.path.shift();\n"],[0,"};\n\nstat"]],"start1":309,"start2":309,"length1":16,"length2":55},{"diffs":[[0,"n(entity) {\n"],[1,"    \n"],[0,"    // Get a"]],"start1":405,"start2":405,"length1":24,"length2":29},{"diffs":[[0,"   if (!"],[-1,"entity"],[1,"this"],[0,".movePro"]],"start1":537,"start2":537,"length1":22,"length2":20},{"diffs":[[0,"ress) {\n        "],[-1,"entity"],[1,"this"],[0,".moveProgress = "]],"start1":558,"start2":558,"length1":38,"length2":36},{"diffs":[[0," }\n    \n    "],[-1,"entity"],[1,"this"],[0,".moveProgres"]],"start1":600,"start2":600,"length1":30,"length2":28},{"diffs":[[0,"    if ("],[-1,"entity"],[1,"this"],[0,".movePro"]],"start1":652,"start2":652,"length1":22,"length2":20},{"diffs":[[0,"        "],[-1,"entity"],[1,"this"],[0,".movePro"]],"start1":686,"start2":686,"length1":22,"length2":20},{"diffs":[[0,"ity.x = "],[-1,"entity.targetX"],[1,"this.nextTile.x"],[0,";\n      "]],"start1":729,"start2":729,"length1":30,"length2":31},{"diffs":[[0,"ity.y = "],[-1,"entity.targetY"],[1,"this.nextTile.y"],[0,";\n      "]],"start1":765,"start2":765,"length1":30,"length2":31}]],"length":4611,"saved":false}
{"ts":1374849212373,"patch":[[{"diffs":[[0,"his."],[-1,"path = this.aStar(entity);\n    this.nextTile = this.path.shift"],[1,"getNewPath"],[0,"();\n"]],"start1":286,"start2":286,"length1":70,"length2":18},{"diffs":[[0,"    "],[-1,"// Get a new target\n        this.getTarget(entity);"],[1,"if (this.path.length)"],[0,"\n   "]],"start1":742,"start2":742,"length1":59,"length2":29},{"diffs":[[0,"dom());\n};\n\n"],[1,"states.PathWander.prototype.getNewPath = function() {\n    this.path = this.aStar(entity);\n    this.nextTile = this.path.shift();\n}\n\n"],[0,"states.PathW"]],"start1":961,"start2":961,"length1":24,"length2":156}]],"length":4661,"saved":false}
{"ts":1374849251645,"patch":[[{"diffs":[[0,"h.length"],[-1,")"],[1," === 0) {\n            this.getNewPath();\n        } else {\n            this.nextTile = this.path.shift();\n        }"],[0,"\n    }\n}"]],"start1":758,"start2":758,"length1":17,"length2":130},{"diffs":[[0,"Path = function("],[1,"entity"],[0,") {\n    this.pat"]],"start1":1120,"start2":1120,"length1":32,"length2":38},{"diffs":[[0,"ift();\n}"],[1,";"],[0,"\n\nstates"]],"start1":1214,"start2":1214,"length1":16,"length2":17}]],"length":4781,"saved":false}
{"ts":1374849257285,"patch":[[{"diffs":[[0,"NewPath("],[1,"entity"],[0,");\n};\n\ns"]],"start1":293,"start2":293,"length1":16,"length2":22}]],"length":4787,"saved":false}
{"ts":1374849270070,"patch":[[{"diffs":[[0,") {\n"],[-1,"    this.getTarget(entity);\n"],[0,"    "]],"start1":249,"start2":249,"length1":36,"length2":8},{"diffs":[[0,"ction(entity) {\n"],[1,"    this.getTarget(entity);\n"],[0,"    this.path = "]],"start1":1108,"start2":1108,"length1":32,"length2":60}]],"length":4787,"saved":false}
{"ts":1374849279403,"patch":[[{"diffs":[[0,") {\n"],[-1,"    \n    // Get a target tile\n    if (!entity.targetX || !entity.targetY) {\n        this.getTarget(entity);\n    }\n    \n"],[0,"    "]],"start1":339,"start2":339,"length1":127,"length2":8}]],"length":4668,"saved":false}
{"ts":1374849422578,"patch":[[{"diffs":[[0,"            "],[-1,"this.nextTile"],[1,"entity.target"],[0," = this.path"]],"start1":683,"start2":683,"length1":37,"length2":37}]],"length":4668,"saved":false}
{"ts":1374849439014,"patch":[[{"diffs":[[0,"y);\n    "],[-1,"this.nextTile"],[1,"entity.target"],[0," = this."]],"start1":1065,"start2":1065,"length1":29,"length2":29}]],"length":4668,"saved":false}
{"ts":1374849497161,"patch":[[{"diffs":[[0,"ity.x = "],[-1,"this.nextTile"],[1,"entity.target"],[0,".x;\n    "]],"start1":536,"start2":536,"length1":29,"length2":29},{"diffs":[[0,"y = "],[-1,"this.nextTile"],[1,"entity.target"],[0,".y;\n"]],"start1":576,"start2":576,"length1":21,"length2":21}]],"length":4668,"saved":false}
{"ts":1374849635497,"patch":[[{"diffs":[[0,"}\n    }\n"],[1,"    \n    if (entity.x == entity.target.x && entity.y == entity.target.y) {\n        // we are at the target tile, see if there is more in the path\n        \n    }\n"],[0,"};\n\nstat"]],"start1":738,"start2":738,"length1":16,"length2":177}]],"length":4829,"saved":false}
{"ts":1374849676966,"patch":[[{"diffs":[[0,"    "],[-1,"entity.target = this.path.shift();"],[0,"\n   "]],"start1":691,"start2":691,"length1":42,"length2":8},{"diffs":[[0,"ath\n        "],[1,"if (this.path.length === 0) {\n            this.getNewPath(entity);\n        } else {\n            entity.target = this.path.shift();\n        }"],[0,"\n    }\n};\n\ns"]],"start1":854,"start2":854,"length1":24,"length2":164}]],"length":4935,"saved":false}
{"ts":1374849679930,"patch":[[{"diffs":[[0,".y;\n"],[-1,"        if (this.path.length === 0) {\n            this.getNewPath();\n        } else {\n            \n        }\n"],[0,"    "]],"start1":593,"start2":593,"length1":117,"length2":8}]],"length":4826,"saved":false}
{"ts":1374849958995,"patch":[[{"diffs":[[0,"   if (!"],[-1,"this"],[1,"entity"],[0,".movePro"]],"start1":344,"start2":344,"length1":20,"length2":22},{"diffs":[[0,"ress) {\n        "],[-1,"this"],[1,"entity"],[0,".moveProgress = "]],"start1":367,"start2":367,"length1":36,"length2":38},{"diffs":[[0," }\n    \n    "],[-1,"this"],[1,"entity"],[0,".moveProgres"]],"start1":411,"start2":411,"length1":28,"length2":30},{"diffs":[[0,"    if ("],[-1,"this"],[1,"entity"],[0,".movePro"]],"start1":465,"start2":465,"length1":20,"length2":22},{"diffs":[[0,"        "],[-1,"this"],[1,"entity"],[0,".movePro"]],"start1":501,"start2":501,"length1":20,"length2":22}]],"length":4836,"saved":false}
{"ts":1374850071131,"patch":[[{"diffs":[[0,"_node];\n    }\n};"],[1,"\n\nstates.PathWander.prototype.draw = function(ctx, xOffset, yOffset, tileSize) {\n    \n}"]],"start1":4820,"start2":4820,"length1":16,"length2":103}]],"length":4923,"saved":false}
{"ts":1374850111603,"patch":[[{"diffs":[[0,") {\n    "],[1,"if (this.path) {\n        Tile targetTile = this.path[this.path.length-1];\n    }"],[0,"\n}"],[1,";"]],"start1":4913,"start2":4913,"length1":10,"length2":90}]],"length":5003,"saved":false}
{"ts":1374850140883,"patch":[[{"diffs":[[0,"gth-1];\n"],[1,"        \n        var targetXPix = (tileSize * targetTile.x) + xOffset;\n        var targetYPix = (tileSize * targetTile.y) + yOffset;\n"],[0,"    }\n};"]],"start1":4987,"start2":4987,"length1":16,"length2":149}]],"length":5136,"saved":false}
{"ts":1374850152543,"patch":[[{"diffs":[[0,"        "],[-1,"Tile"],[1,"var"],[0," targetT"]],"start1":4938,"start2":4938,"length1":20,"length2":19}]],"length":5135,"saved":false}
{"ts":1374850181990,"patch":[[{"diffs":[[0," + yOffset;\n"],[1,"        \n        ctx.beginPath();\n        ctx.rect(targetXPix, targetYPix, tileSize, tileSize);\n        ctx.fillStyle = (this.colour) ? this.colour : \"red\";\n        ctx.fill();\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = 'black';\n        ctx.stroke();\n"],[0,"    }\n};"]],"start1":5115,"start2":5115,"length1":20,"length2":281}]],"length":5396,"saved":false}
{"ts":1374850204665,"patch":[[{"diffs":[[0,"e = "],[-1,"(this.colour) ? this.colour : \"red"],[1,"\"orange"],[0,"\";\n "]],"start1":5243,"start2":5243,"length1":42,"length2":15}]],"length":5369,"saved":false}
{"ts":1374850303246,"patch":[[{"diffs":[[0,"his.path"],[1," && this.path.length > 0"],[0,") {\n    "]],"start1":4926,"start2":4926,"length1":16,"length2":40}]],"length":5393,"saved":false}
{"ts":1374850391896,"patch":[[{"diffs":[[0,"            "],[1,"//"],[0,"var tentativ"]],"start1":2436,"start2":2436,"length1":24,"length2":26},{"diffs":[[0,"nt, neighbour);\n"],[1,"            var tentative_g_score = currentGScore + 1;\n"],[0,"            if ("]],"start1":2521,"start2":2521,"length1":32,"length2":87}]],"length":5450,"saved":false}
{"ts":1374850407654,"patch":[[{"diffs":[[0,"art) + this."],[-1,"manhattan"],[1,"actual"],[0,"Distance(sta"]],"start1":1709,"start2":1709,"length1":33,"length2":30},{"diffs":[[0," + this."],[-1,"manhattan"],[1,"actual"],[0,"Distance"]],"start1":3054,"start2":3054,"length1":25,"length2":22}]],"length":5444,"saved":false}
{"ts":1374850434886,"patch":[[{"diffs":[[0,"t(start) + this."],[-1,"actual"],[1,"straightLine"],[0,"Distance(start, "]],"start1":1705,"start2":1705,"length1":38,"length2":44},{"diffs":[[0," + this."],[-1,"actual"],[1,"straightLine"],[0,"Distance"]],"start1":3060,"start2":3060,"length1":22,"length2":28}]],"length":5456,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375110472698,"patch":[[{"diffs":[[0,"ity."],[-1,"x = entity.target.x;\n        entity.y"],[1,"tile"],[0," = e"]],"start1":546,"start2":546,"length1":45,"length2":12},{"diffs":[[0,"y.target"],[-1,".y"],[0,";\n    }\n"]],"start1":562,"start2":562,"length1":18,"length2":16},{"diffs":[[0,"tity) {\n    "],[-1,"this."],[1,"var "],[0,"targetX = Ma"]],"start1":934,"start2":934,"length1":29,"length2":28},{"diffs":[[0,"));\n    "],[-1,"this."],[1,"var "],[0,"targetY "]],"start1":1003,"start2":1003,"length1":21,"length2":20},{"diffs":[[0,"dom());\n"],[1,"    this.target = entity.world.getTile(targetX, targetY);\n"],[0,"};\n\nstat"]],"start1":1064,"start2":1064,"length1":16,"length2":74},{"diffs":[[0,"ity."],[-1,"world.getTile(entity.x, entity.y);\n    var goal = entity.world.getTile(this.targetX, this.targetY)"],[1,"tile;\n    var goal = this.target"],[0,";\n  "]],"start1":1375,"start2":1375,"length1":106,"length2":40},{"diffs":[[0,"tart) + "],[-1,"this"],[1,"start"],[0,".straigh"]],"start1":1663,"start2":1663,"length1":20,"length2":21},{"diffs":[[0,"istance("],[-1,"start, "],[0,"goal));\n"]],"start1":1690,"start2":1690,"length1":23,"length2":16},{"diffs":[[0,"Score + "],[-1,"this"],[1,"neighbour"],[0,".straigh"]],"start1":3004,"start2":3004,"length1":20,"length2":25},{"diffs":[[0,"istance("],[-1,"neighbour, "],[0,"goal));\n"]],"start1":3035,"start2":3035,"length1":27,"length2":16},{"diffs":[[0,"    }\n    }\n"],[1,""],[0,"    return t"]],"start1":3773,"start2":3773,"length1":24,"length2":24},{"diffs":[[0,"};\n\n"],[-1,"states.PathWander.prototype.actualDistance = function(start, end) {\n    var xDiff = Math.abs(start.x - end.x);\n    var yDiff = Math.abs(start.y - end.y);\n    var dist = Math.max(xDiff, yDiff);\n    return dist;\n};\n\nstates.PathWander.prototype.manhattanDistance = function(start, end) {\n    var xDiff = Math.abs(start.x - end.x);\n    var yDiff = Math.abs(start.y - end.y);\n    var dist = xDiff + yDiff;\n    return dist;\n};\n\nstates.PathWander.prototype.straightLineDistance = function(start, end) {\n    var xDiff = Math.abs(start.x - end.x);\n    var yDiff = Math.abs(start.y - end.y);\n    var dist = Math.sqrt(xDiff*xDiff + yDiff*yDiff);\n    //var dist = Math.max(xDiff, yDiff);\n    return dist;\n};\n\n"],[0,"stat"]],"start1":3806,"start2":3806,"length1":705,"length2":8}]],"length":4702,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375110587915,"patch":[[{"diffs":[[0,"(entity."],[1,"tile."],[0,"x == ent"]],"start1":590,"start2":590,"length1":16,"length2":21},{"diffs":[[0," entity."],[1,"tile."],[0,"y == ent"]],"start1":626,"start2":626,"length1":16,"length2":21}]],"length":4712,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375452816324,"patch":[[{"diffs":[[0,"*/\n\nvar "],[-1,"s"],[1,"S"],[0,"tate"],[-1,"s"],[0," = names"]],"start1":24,"start2":24,"length1":22,"length2":21},{"diffs":[[0,"tate"],[1,"\");\nvar GClass = namespace(\"GClas"],[0,"s\");\n\n"],[-1,"s"],[1,"S"],[0,"tate"],[-1,"s"],[0,".Pat"]],"start1":57,"start2":57,"length1":20,"length2":52},{"diffs":[[0,"athWander = "],[1,"("],[0,"function() {"]],"start1":107,"start2":107,"length1":24,"length2":25},{"diffs":[[0,"    "],[-1,"states.State.call(this, \"PathWander\");\n};\nstates.PathWander.prototype = new s"],[1,"var $this = function() {\n        $this.base.constructor.call(this, \"PathWander\");\n    };\n    \n    GClass.extend(S"],[0,"tate"],[-1,"s"],[0,".State"],[-1,"();\n\nstates.PathWander.prototype."],[1,", $this, {\n        \n        "],[0,"enter"],[-1," ="],[1,":"],[0," fun"]],"start1":133,"start2":133,"length1":136,"length2":165},{"diffs":[[0,"ction(entity) {\n"],[1,"        "],[0,"    this.getNewP"]],"start1":298,"start2":298,"length1":32,"length2":40},{"diffs":[[0,"y);\n"],[-1,"};\n\nstates.PathWander.prototype."],[1,"        },\n        \n        "],[0,"execute"],[-1," ="],[1,":"],[0," fun"]],"start1":347,"start2":347,"length1":49,"length2":44},{"diffs":[[0,"n(entity) {\n"],[1,"        "],[0,"    if (!ent"]],"start1":395,"start2":395,"length1":24,"length2":32},{"diffs":[[0,"Progress) {\n"],[1,"        "],[0,"        enti"]],"start1":435,"start2":435,"length1":24,"length2":32},{"diffs":[[0,"ss = 0;\n    "],[-1,"}\n    \n"],[1,"        }\n            \n        "],[0,"    entity.m"]],"start1":480,"start2":480,"length1":31,"length2":55},{"diffs":[[0,".speed;\n    "],[-1,"\n"],[1,"        \n        "],[0,"    if (enti"]],"start1":556,"start2":556,"length1":25,"length2":41},{"diffs":[[0,"ess >= 1) {\n"],[1,"        "],[0,"        enti"]],"start1":609,"start2":609,"length1":24,"length2":32},{"diffs":[[0,"s -= 1;\n        "],[1,"  "],[1,"      "],[0,"entity.tile = en"]],"start1":655,"start2":655,"length1":32,"length2":40},{"diffs":[[0,"    "],[-1,"}\n    \n"],[1,"        }\n            \n        "],[0,"    "]],"start1":708,"start2":708,"length1":15,"length2":39},{"diffs":[[0,"        "],[1,"   "],[1,"     "],[0,"// we ar"]],"start1":823,"start2":823,"length1":16,"length2":24},{"diffs":[[0,"ath\n        "],[1,"       "],[1," "],[0,"if (this.pat"]],"start1":898,"start2":898,"length1":24,"length2":32},{"diffs":[[0,") {\n            "],[1,"        "],[0,"this.getNewPath("]],"start1":944,"start2":944,"length1":32,"length2":40},{"diffs":[[0,"y);\n        "],[1,"  "],[1,"      "],[0,"} else {\n   "]],"start1":989,"start2":989,"length1":24,"length2":32},{"diffs":[[0,"       } else {\n"],[1,"        "],[0,"            enti"]],"start1":1002,"start2":1002,"length1":32,"length2":40},{"diffs":[[0,"    "],[-1,"}\n    }\n};\n\nstates.PathWander.prototype."],[1,"        }\n            }\n        },\n        \n        "],[0,"getT"]],"start1":1077,"start2":1077,"length1":48,"length2":60},{"diffs":[[0,"etTarget"],[-1," ="],[1,":"],[0," functio"]],"start1":1134,"start2":1134,"length1":18,"length2":17},{"diffs":[[0,"ction(entity) {\n"],[1,"        "],[0,"    var targetX "]],"start1":1147,"start2":1147,"length1":32,"length2":40},{"diffs":[[0,".random());\n"],[1,"        "],[0,"    var targ"]],"start1":1224,"start2":1224,"length1":24,"length2":32},{"diffs":[[0,".random());\n"],[1,"        "],[0,"    this.tar"]],"start1":1297,"start2":1297,"length1":24,"length2":32},{"diffs":[[0,"Y);\n"],[-1,"};\n\nstates.PathWander.prototype.getNewPath = function(entity) {\n    this.getTarget(entity);\n    this.path = this.aStar(entity);\n    entity.target = this.path.shift();\n};\n\nstates.PathWander.prototype.aStar = function(entity) {\n    var start = entity.tile;\n    var goal = this.target;\n    var closedset = [];\n    var openset = [start];\n    var came_from = new Utils.ToStringMap();\n    var g_score = new Utils.ToStringMap();\n    var f_score = new Utils.ToStringMap("],[1,"        },\n        \n        getNewPath: function(entity) {\n            this.getTarget(entity"],[0,");\n    "],[-1,"\n"],[0,"    "],[-1,"g_score.put(start, 0);\n    f_score.put(start, g_score.get(start) + start.straightLineDistance(goal));\n    \n    while (openset.length > 0) {\n        var current = this.getLowestFScore(openset, f_score); //the node in openset with lowest f_score\n        if (current == goal)\n            return this.reconstructPath(came_from, goal);\n        \n        // remove current from openset\n        var index = openset.indexOf(current);\n        openset.splice(index, 1);\n        // add current to closedset\n        closedset.push(current"],[1,"    this.path = this.aStar(entity);\n            entity.target = this.path.shift("],[0,");\n "]],"start1":1371,"start2":1371,"length1":1007,"length2":191},{"diffs":[[0,"hift();\n        "],[1,"},"],[0,"\n        // for "]],"start1":1553,"start2":1553,"length1":32,"length2":34},{"diffs":[[0,"    "],[-1,"// for each neightbour\n        var neighbours = entity.world.getNeighboursFor(current);\n        for (var i = 0; i < neighbours.length; i++) {\n            var neighbour = neighbours[i];\n            var currentGScore = g_score.get(current);\n            //var tentative_g_score = currentGScore + this.getNeighbourDistance(current, neighbour);\n            var tentative_g_score = currentGScore + 1;\n            if (closedset.indexOf(neighbour) >= 0 && tentative_g_score >= g_score.get(neighbour))\n                continue;\n                \n            if (openset.indexOf(neighbour) == -1 || tentative_g_score < g_score.get("],[1,"\n        getNeighbourDistance: function(tile, neighbour) {\n            if (tile.x == neighbour.x || tile.y == "],[0,"neig"]],"start1":1576,"start2":1576,"length1":628,"length2":118},{"diffs":[[0,"eighbour"],[-1,")"],[1,".y"],[0,") {\n    "]],"start1":1691,"start2":1691,"length1":17,"length2":18},{"diffs":[[0,"    "],[-1,"came_from.put(neighbour, current);\n                g_score.put(neighbour, tentative_g_score);\n                var neighbourGScore = g_score.get(neighbour);\n                f_score.put(neighbour, neighbourGScore + neighbour.straightLineDistance(goal));\n                if (openset.indexOf(neighbour) == -1) {\n                    openset.push(neighbour)"],[1,"return 1;\n            } else return 1.4"],[0,";\n  "]],"start1":1717,"start2":1717,"length1":359,"length2":47},{"diffs":[[0,"    "],[-1," "],[-1,"       }\n            }\n        }\n    }\n    // return failure\n    return null;\n};\n\nstates.PathWander.prototype.getNeighbourDistance = function(tile, neighbour) {\n    if (tile.x == neighbour.x || tile.y == neighbour.y) {\n        return 1;\n    } else return 1.4;\n};\n\nstates.PathWander.prototype."],[1,"},\n        \n        "],[0,"getL"]],"start1":1766,"start2":1766,"length1":301,"length2":28},{"diffs":[[0,"stFScore"],[-1," ="],[1,":"],[0," functio"]],"start1":1797,"start2":1797,"length1":18,"length2":17},{"diffs":[[0," f_score) {\n"],[1,"        "],[0,"    var lowe"]],"start1":1824,"start2":1824,"length1":24,"length2":32},{"diffs":[[0,"tSoFar;\n"],[1,"        "],[0,"    var "]],"start1":1857,"start2":1857,"length1":16,"length2":24},{"diffs":[[0,"Return;\n"],[1,"        "],[0,"    for "]],"start1":1883,"start2":1883,"length1":16,"length2":24},{"diffs":[[0,"gth; i++) {\n"],[1,"        "],[0,"        var "]],"start1":1934,"start2":1934,"length1":24,"length2":32},{"diffs":[[0,"i];\n        "],[1,"   "],[1,"     "],[0,"var score = "]],"start1":1981,"start2":1981,"length1":24,"length2":32},{"diffs":[[0,"e);\n        "],[1,"      "],[1,"  "],[0,"if (!lowestS"]],"start1":2028,"start2":2028,"length1":24,"length2":32},{"diffs":[[0,"        "],[1,"        "],[0,"lowestSo"]],"start1":2095,"start2":2095,"length1":16,"length2":24},{"diffs":[[0,"        "],[1," "],[1,"       "],[0,"toReturn"]],"start1":2136,"start2":2136,"length1":16,"length2":24},{"diffs":[[0,"    "],[-1,"}\n"],[1,"        }\n        "],[0,"    }\n"],[1,"        "],[0,"    "]],"start1":2173,"start2":2173,"length1":16,"length2":40},{"diffs":[[0,"rn;\n"],[-1,"};\n\nstates.PathWander.prototype."],[1,"        },\n        \n        "],[0,"reco"]],"start1":2226,"start2":2226,"length1":40,"length2":36},{"diffs":[[0,"ructPath"],[-1," ="],[1,":"],[0," functio"]],"start1":2265,"start2":2265,"length1":18,"length2":17},{"diffs":[[0,"ent_node) {\n"],[1,"        "],[0,"    // if cu"]],"start1":2299,"start2":2299,"length1":24,"length2":32},{"diffs":[[0,"me from\n"],[1,"        "],[0,"    if ("]],"start1":2347,"start2":2347,"length1":16,"length2":24},{"diffs":[[0,"nt_node)) {\n"],[1,"        "],[0,"        var "]],"start1":2390,"start2":2390,"length1":24,"length2":32},{"diffs":[[0,"        "],[1,"   "],[1,"     "],[0,"p.push(c"]],"start1":2488,"start2":2488,"length1":16,"length2":24},{"diffs":[[0,"e);\n        "],[1,"       "],[1," "],[0,"return p;\n  "]],"start1":2522,"start2":2522,"length1":24,"length2":32},{"diffs":[[0,"turn p;\n"],[1,"        "],[0,"    } el"]],"start1":2544,"start2":2544,"length1":16,"length2":24},{"diffs":[[0,"e {\n        "],[1,"  "],[1,"      "],[0,"return [curr"]],"start1":2569,"start2":2569,"length1":24,"length2":32},{"diffs":[[0,"    "],[-1,"}\n};\n\nstates.PathWander.prototype."],[1,"        }\n        },\n        \n        "],[0,"draw"],[-1," ="],[1,":"],[0," fun"]],"start1":2612,"start2":2612,"length1":48,"length2":51},{"diffs":[[0,"tileSize) {\n"],[1,"        "],[0,"    if (this"]],"start1":2692,"start2":2692,"length1":24,"length2":32},{"diffs":[[0," > 0) {\n        "],[1,"  "],[1,"      "],[0,"var targetTile ="]],"start1":2749,"start2":2749,"length1":32,"length2":40},{"diffs":[[0,"gth-1];\n        "],[1,"     "],[-1,"\n"],[1,"   \n        "],[0,"        var targ"]],"start1":2813,"start2":2813,"length1":33,"length2":49},{"diffs":[[0,"Offset;\n        "],[1," "],[1,"       "],[0,"var targetYPix ="]],"start1":2900,"start2":2900,"length1":32,"length2":40},{"diffs":[[0,"Offset;\n        "],[1,"    "],[-1,"\n"],[1,"    \n        "],[0,"        ctx.begi"]],"start1":2970,"start2":2970,"length1":33,"length2":49},{"diffs":[[0,"eginPath();\n"],[1,"        "],[0,"        ctx."]],"start1":3016,"start2":3016,"length1":24,"length2":32},{"diffs":[[0,"eSize);\n        "],[1,"   "],[1,"     "],[0,"ctx.fillStyle = "]],"start1":3090,"start2":3090,"length1":32,"length2":40},{"diffs":[[0,"range\";\n        "],[1,"       "],[1," "],[0,"ctx.fill();\n    "]],"start1":3132,"start2":3132,"length1":32,"length2":40},{"diffs":[[0,"ctx.fill();\n"],[1,"        "],[0,"        ctx."]],"start1":3156,"start2":3156,"length1":24,"length2":32},{"diffs":[[0,"th = 1;\n        "],[1,"  "],[1,"      "],[0,"ctx.strokeStyle "]],"start1":3195,"start2":3195,"length1":32,"length2":40},{"diffs":[[0,"black';\n        "],[1,"      "],[1,"  "],[0,"ctx.stroke();\n  "]],"start1":3238,"start2":3238,"length1":32,"length2":40},{"diffs":[[0,"    "],[-1,"}\n};"],[1,"        }\n        }\n    });\n    \n    return $this;\n})();\n\n"]],"start1":3276,"start2":3276,"length1":8,"length2":62}]],"length":3338,"saved":false}
{"ts":1375452935181,"patch":[[{"diffs":[[0,"    },\n        \n"],[1,"        // TODO: make private?\n"],[0,"        getLowes"]],"start1":1766,"start2":1766,"length1":32,"length2":63}]],"length":3369,"saved":false}
{"ts":1375452959779,"patch":[[{"diffs":[[0,"    "],[-1,"// TODO: make private?\n        getLowestFScore: function(openset, f_score) {\n            var lowestSoFar;\n            var toReturn;\n            for (var i = 0; i < openset.length; i++) {\n                var tile = openset[i];\n                var score = f_score.get(tile);\n                if (!lowestSoFar || score < lowestSoFar) {\n                    lowestSoFar = score;\n                    toReturn = tile;\n                }\n            }\n            return toReturn;\n        },\n        \n"],[0,"    "]],"start1":1786,"start2":1786,"length1":499,"length2":8}]],"length":2878,"saved":false}
{"ts":1375452973020,"patch":[[{"diffs":[[0,"},\n        \n"],[-1,"        "],[0,"        reco"]],"start1":1770,"start2":1770,"length1":32,"length2":24}]],"length":2870,"saved":false}
{"ts":1375452990642,"patch":[[{"diffs":[[0,"    "],[-1,"\n        reconstructPath: function(came_from, current_node) {\n            // if current node in came from\n            if (came_from.get(current_node)) {\n                var p = this.reconstructPath(came_from, came_from.get(current_node));\n                p.push(current_node);\n                return p;\n            } else {\n                return [current_node];\n            }\n        },\n"],[0,"    "]],"start1":1777,"start2":1777,"length1":396,"length2":8}]],"length":2482,"saved":false}
{"ts":1375453263085,"patch":[[{"diffs":[[0,"    "],[-1,"this.target ="],[1,"return"],[0," ent"]],"start1":1317,"start2":1317,"length1":21,"length2":14}]],"length":2475,"saved":false}
{"ts":1375453272422,"patch":[[{"diffs":[[0,"y) {\n           "],[1," var target ="],[0," this.getTarget("]],"start1":1422,"start2":1422,"length1":32,"length2":45}]],"length":2488,"saved":false}
{"ts":1375453404838,"patch":[[{"diffs":[[0,"h = "],[-1,"this.aStar(entity"],[1,"new State.Path(entity, target"],[0,");\n "]],"start1":1496,"start2":1496,"length1":25,"length2":37},{"diffs":[[0,"get = this.path."],[-1,"shift"],[1,"nextTile"],[0,"();\n        },\n "]],"start1":1554,"start2":1554,"length1":37,"length2":40}]],"length":2503,"saved":false}
{"ts":1375453482398,"patch":[[{"diffs":[[0,"path"],[-1," && this.path.length > 0) {\n                var targetTile = this.path[this.path.length-1];\n                \n                var targetXPix = (tileSize * targetTile.x) + xOffset;\n                var targetYPix = (tileSize * targetTile.y) + yOffset;\n                \n                ctx.beginPath();\n                ctx.rect(targetXPix, targetYPix, tileSize, tileSize);\n                ctx.fillStyle = \"orange\";\n                ctx.fill();\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = 'black';\n                ctx.stroke("],[1,") {\n                this.path.draw(ctx, xOffset, yOffset, tileSize"],[0,");\n "]],"start1":1890,"start2":1890,"length1":552,"length2":74}]],"length":2025,"saved":false}
{"ts":1375453553557,"patch":[[{"diffs":[[0,"ction(entity) {\n"],[1,"            // TODO: should probably move this into MovingEntity as the logic should be similar for loads of states\n"],[0,"            if ("]],"start1":391,"start2":391,"length1":32,"length2":148}]],"length":2141,"saved":false}
{"ts":1375453563009,"patch":[[{"diffs":[[0,"ath."],[-1,"shift"],[1,"nextTile"],[0,"();\n"]],"start1":1176,"start2":1176,"length1":13,"length2":16}]],"length":2144,"saved":false}
{"ts":1375453573941,"patch":[[{"diffs":[[0,"ath."],[-1,"length === 0"],[1,"hasTiles()"],[0,") {\n"]],"start1":1044,"start2":1044,"length1":20,"length2":18}]],"length":2142,"saved":false}
{"ts":1375453624710,"patch":[[{"diffs":[[0,"            if ("],[1,"!"],[0,"this.path.hasTil"]],"start1":1022,"start2":1022,"length1":32,"length2":33}]],"length":2143,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375862223093,"patch":[[{"diffs":[[0,"!entity."],[-1,"moveP"],[1,"p"],[0,"rogress"],[1,"ToNeighbour"],[0,") {\n    "]],"start1":539,"start2":539,"length1":28,"length2":35},{"diffs":[[0," entity."],[-1,"moveP"],[1,"p"],[0,"rogress"],[1,"ToNeighbour"],[0," = 0;\n  "]],"start1":585,"start2":585,"length1":28,"length2":35},{"diffs":[[0," entity."],[-1,"moveP"],[1,"p"],[0,"rogress"],[1,"ToNeighbour"],[0," += enti"]],"start1":656,"start2":656,"length1":28,"length2":35},{"diffs":[[0,"(entity."],[-1,"moveP"],[1,"p"],[0,"rogress"],[1,"ToNeighbour"],[0," >= 1) {"]],"start1":729,"start2":729,"length1":28,"length2":35},{"diffs":[[0,"ity."],[-1,"moveP"],[1,"p"],[0,"rogress"],[1,"ToNeighbour"],[0," -= "]],"start1":784,"start2":784,"length1":20,"length2":27},{"diffs":[[0,"ity."],[-1,"tile = "],[1,"setTile("],[0,"enti"]],"start1":833,"start2":833,"length1":15,"length2":16},{"diffs":[[0,"y.target"],[1,")"],[0,";\n      "]],"start1":850,"start2":850,"length1":16,"length2":17},{"diffs":[[0,"(entity."],[-1,"t"],[1,"getT"],[0,"ile"],[1,"()"],[0,".x == en"]],"start1":903,"start2":903,"length1":20,"length2":25},{"diffs":[[0," entity."],[-1,"t"],[1,"getT"],[0,"ile"],[1,"()"],[0,".y == en"]],"start1":944,"start2":944,"length1":20,"length2":25}]],"length":2190,"saved":false}
{"ts":1375862507075,"patch":[[{"diffs":[[0,"(entity."],[-1,"t"],[1,"getT"],[0,"arget"],[1,"()"],[0,");\n     "]],"start1":844,"start2":844,"length1":22,"length2":27}]],"length":2195,"saved":false}
{"ts":1375862519813,"patch":[[{"diffs":[[0," entity."],[-1,"t"],[1,"getT"],[0,"arget"],[1,"()"],[0,".x && en"]],"start1":930,"start2":930,"length1":22,"length2":27}]],"length":2200,"saved":false}
{"ts":1375862534938,"patch":[[{"diffs":[[0,"     entity."],[-1,"t"],[1,"setT"],[0,"arget"],[-1," = this."],[1,"("],[0,"path.nextTil"]],"start1":1205,"start2":1205,"length1":38,"length2":34},{"diffs":[[0,"(path.nextTile()"],[1,")"],[0,";\n              "]],"start1":1226,"start2":1226,"length1":32,"length2":33}]],"length":2197,"saved":false}
{"ts":1375862545216,"patch":[[{"diffs":[[0,"tTarget("],[1,"this."],[0,"path.nex"]],"start1":1219,"start2":1219,"length1":16,"length2":21}]],"length":2202,"saved":false}
{"ts":1375862560538,"patch":[[{"diffs":[[0," entity."],[-1,"t"],[1,"setT"],[0,"arget"],[-1," = "],[1,"("],[0,"this.pat"]],"start1":1720,"start2":1720,"length1":25,"length2":26},{"diffs":[[0,"xtTile()"],[1,")"],[0,";\n      "]],"start1":1750,"start2":1750,"length1":16,"length2":17}]],"length":2204,"saved":false}
{"ts":1375862620517,"patch":[[{"diffs":[[0," entity."],[-1,"t"],[1,"getT"],[0,"arget"],[1,"()"],[0,".y) {\n  "]],"start1":976,"start2":976,"length1":22,"length2":27}]],"length":2209,"saved":false}
{"ts":1375862671410,"patch":[[{"diffs":[[0,"       this."],[1,"_"],[0,"path = new S"]],"start1":1663,"start2":1663,"length1":24,"length2":25}]],"length":2210,"saved":false}
{"ts":1375862691727,"patch":[[{"diffs":[[0,"  if (!this."],[1,"_"],[0,"path.hasTile"]],"start1":1094,"start2":1094,"length1":24,"length2":25},{"diffs":[[0,".setTarget(this."],[1,"_"],[0,"path.nextTile())"]],"start1":1222,"start2":1222,"length1":32,"length2":33},{"diffs":[[0,"Target(this."],[1,"_"],[0,"path.nextTil"]],"start1":1739,"start2":1739,"length1":24,"length2":25},{"diffs":[[0,"   if (this."],[1,"_"],[0,"path) {\n    "]],"start1":2066,"start2":2066,"length1":24,"length2":25},{"diffs":[[0,"   this."],[1,"_"],[0,"path.dra"]],"start1":2100,"start2":2100,"length1":16,"length2":17}]],"length":2215,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375862746085,"patch":[[{"diffs":[[0,"ity."],[-1,"s"],[1,"getS"],[0,"peed"],[1,"()"],[0,";\n  "]],"start1":690,"start2":690,"length1":13,"length2":18}]],"length":2220,"saved":false}
{"ts":1375863409308,"patch":[[{"diffs":[[0,"ction(entity) {\n"],[1,"            var world = entity.getWorld();\n"],[0,"            var "]],"start1":1336,"start2":1336,"length1":32,"length2":75},{"diffs":[[0,"tX = Math.floor("],[-1,"entity."],[0,"world.size * Mat"]],"start1":1416,"start2":1416,"length1":39,"length2":32},{"diffs":[[0,"h.floor("],[-1,"entity."],[0,"world.si"]],"start1":1490,"start2":1490,"length1":23,"length2":16},{"diffs":[[0," return "],[-1,"entity."],[0,"world.ge"]],"start1":1538,"start2":1538,"length1":23,"length2":16}]],"length":2242,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375863882879,"patch":[[{"diffs":[[0,"if (!entity."],[-1,"p"],[1,"getP"],[0,"rogressToNei"]],"start1":535,"start2":535,"length1":25,"length2":28},{"diffs":[[0,"gressToNeighbour"],[1,"()"],[0,") {\n            "]],"start1":553,"start2":553,"length1":32,"length2":34},{"diffs":[[0,"         entity."],[-1,"p"],[1,"setP"],[0,"rogressToNeighbo"]],"start1":582,"start2":582,"length1":33,"length2":36},{"diffs":[[0,"bour"],[-1," = 0"],[1,"(0)"],[0,";\n  "]],"start1":616,"start2":616,"length1":12,"length2":11}]],"length":2249,"saved":false}
{"ts":1375863936997,"patch":[[{"diffs":[[0,"            "],[-1,"entity.p"],[1,"// TODO: should have some kind of incremental movement method\n            entity.setProgressToNeighbour(entity.getP"],[0,"rogressToNei"]],"start1":652,"start2":652,"length1":32,"length2":139},{"diffs":[[0,"eighbour"],[1,"()"],[0," += enti"]],"start1":789,"start2":789,"length1":16,"length2":18},{"diffs":[[0,"tSpeed()"],[1,")"],[0,";\n      "]],"start1":812,"start2":812,"length1":16,"length2":17},{"diffs":[[0," if (entity."],[-1,"p"],[1,"getP"],[0,"rogressToNei"]],"start1":847,"start2":847,"length1":25,"length2":28},{"diffs":[[0,"eighbour"],[1,"()"],[0," >= 1) {"]],"start1":873,"start2":873,"length1":16,"length2":18},{"diffs":[[0," entity."],[-1,"p"],[1,"getP"],[0,"rogressT"]],"start1":907,"start2":907,"length1":17,"length2":20},{"diffs":[[0,"eighbour"],[1,"()"],[0," -= 1;\n "]],"start1":929,"start2":929,"length1":16,"length2":18}]],"length":2369,"saved":false}
{"ts":1375863948084,"patch":[[{"diffs":[[0,"bour() +"],[-1,"="],[0," entity."]],"start1":793,"start2":793,"length1":17,"length2":16}]],"length":2368,"saved":false}
{"ts":1375863967992,"patch":[[{"diffs":[[0,"     entity."],[1,"setProgressToNeighbour("],[0,"getProgressT"]],"start1":902,"start2":902,"length1":24,"length2":47},{"diffs":[[0,"bour() -"],[-1,"="],[0," 1"],[1,")"],[0,";\n      "]],"start1":955,"start2":955,"length1":19,"length2":19}]],"length":2391,"saved":false}
{"ts":1375863976390,"patch":[[{"diffs":[[0,"ighbour("],[1,"entity."],[0,"getProgr"]],"start1":929,"start2":929,"length1":16,"length2":23}]],"length":2398,"saved":false}
{"ts":1375864040568,"patch":[[{"diffs":[[0,"ity."],[-1,"setProgressToNeighbour(entity.getProgressTo"],[1,"goTowards"],[0,"Neig"]],"start1":741,"start2":741,"length1":51,"length2":17},{"diffs":[[0,"our("],[-1,") + "],[0,"enti"]],"start1":760,"start2":760,"length1":12,"length2":8}]],"length":2360,"saved":false}
{"ts":1375864058603,"patch":[[{"diffs":[[0,"ity."],[-1,"setProgressToNeighbour(entity.getProgressTo"],[1,"goTowards"],[0,"Neig"]],"start1":872,"start2":872,"length1":51,"length2":17},{"diffs":[[0,"our("],[-1,") - "],[1,"-"],[0,"1);\n"]],"start1":891,"start2":891,"length1":12,"length2":9}]],"length":2323,"saved":false}
{"ts":1375864081182,"patch":[[{"diffs":[[0,"r() >= 1) {\n"],[1,"                // If we've overshot we can use our \"movement points\" next turn\n"],[0,"            "]],"start1":841,"start2":841,"length1":24,"length2":104}]],"length":2403,"saved":false}
{"ts":1375864105286,"patch":[[{"diffs":[[0,"tes\n"],[-1,"            if (!entity.getProgressToNeighbour()) {\n                entity.setProgressToNeighbour(0);\n            }\n"],[0,"    "]],"start1":519,"start2":519,"length1":124,"length2":8}]],"length":2287,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375949160655,"patch":[[{"diffs":[[0,"thod\n           "],[1," //"],[0," entity.goToward"]],"start1":605,"start2":605,"length1":32,"length2":35},{"diffs":[[0,"    \n           "],[1," //"],[0," if (entity.getP"]],"start1":679,"start2":679,"length1":32,"length2":35},{"diffs":[[0,"1) {\n           "],[1," //"],[0,"     // If we've"]],"start1":738,"start2":738,"length1":32,"length2":35},{"diffs":[[0,"turn\n           "],[1," //"],[0,"     entity.goTo"]],"start1":821,"start2":821,"length1":32,"length2":35},{"diffs":[[0,"1);\n            "],[1,"//"],[0,"    "],[1," "],[0,"entity.setTile(e"]],"start1":872,"start2":872,"length1":36,"length2":39},{"diffs":[[0,"());\n           "],[1," //"],[0," }\n            \n"]],"start1":926,"start2":926,"length1":32,"length2":35}]],"length":2305,"saved":false}
{"ts":1375949722667,"patch":[[{"diffs":[[0,"\n           "],[1," //"],[0," if (entity."]],"start1":960,"start2":960,"length1":24,"length2":27},{"diffs":[[0,"\n           "],[1," //"],[0,"     // we a"]],"start1":1071,"start2":1071,"length1":24,"length2":27},{"diffs":[[0,"\n           "],[1," //"],[0,"     if (!th"]],"start1":1153,"start2":1153,"length1":24,"length2":27},{"diffs":[[0,")) {\n           "],[1," //"],[0,"         this.ge"]],"start1":1198,"start2":1198,"length1":32,"length2":35},{"diffs":[[0,"\n           "],[1," //"],[0,"     } else "]],"start1":1250,"start2":1250,"length1":24,"length2":27},{"diffs":[[0,"            "],[1,"//"],[0,"        "],[1," "],[0,"entity.setTa"]],"start1":1279,"start2":1279,"length1":32,"length2":35},{"diffs":[[0,"\n           "],[1," //"],[0,"     }\n"],[1,"            // }\n            \n            if (entity.isAtDestination()) {\n                this.getNewPath(entity);\n"],[0,"            "]],"start1":1342,"start2":1342,"length1":31,"length2":149}]],"length":2441,"saved":false}
{"ts":1375949776918,"patch":[[{"diffs":[[0,"Target(entity);\n"],[1,"            entity.travelTo(target);\n"],[0,"            this"]],"start1":1870,"start2":1870,"length1":32,"length2":69}]],"length":2478,"saved":false}
{"ts":1375949859876,"patch":[[{"diffs":[[0,"t);\n"],[-1,"            this._path = new State.Path(entity, target);\n            entity.setTarget(this._path.nextTile());\n"],[0,"    "]],"start1":1919,"start2":1919,"length1":118,"length2":8}]],"length":2368,"saved":false}
{"ts":1375949876423,"patch":[[{"diffs":[[0,"nation()) {\n"],[1,"                entity.travelTo(this.getTarget(entity));\n"],[0,"            "]],"start1":1426,"start2":1426,"length1":24,"length2":81}]],"length":2425,"saved":false}
{"ts":1375949954785,"patch":[[{"diffs":[[0,"y) {"],[-1,"\n            // TODO: should probably move this into MovingEntity as the logic should be similar for loads of states\n            \n            // TODO: should have some kind of incremental movement method\n            // entity.goTowardsNeighbour(entity.getSpeed());\n            \n            // if (entity.getProgressToNeighbour() >= 1) {\n            //     // If we've overshot we can use our \"movement points\" next turn\n            //     entity.goTowardsNeighbour(-1);\n            //     entity.setTile(entity.getTarget());\n            // }\n            \n            // if (entity.getTile().x == entity.getTarget().x && entity.getTile().y == entity.getTarget().y) {\n            //     // we are at the target tile, see if there is more in the path\n            //     if (!this._path.hasTiles()) {\n            //         this.getNewPath(entity);\n            //     } else {\n            //         entity.setTarget(this._path.nextTile());\n            //     }\n            // }\n"],[0,"    "]],"start1":402,"start2":402,"length1":983,"length2":8}]],"length":1450,"saved":false}
{"ts":1375949976250,"patch":[[{"diffs":[[0,"));\n"],[-1,"                this.getNewPath(entity);\n"],[0,"    "]],"start1":516,"start2":516,"length1":49,"length2":8},{"diffs":[[0,"    "],[-1,"\n        getNewPath: function(entity) {\n            var target = this.getTarget(entity);\n            entity.travelTo(target);\n        },\n"],[0,"    "]],"start1":834,"start2":834,"length1":145,"length2":8}]],"length":1272,"saved":false}
{"ts":1375950003456,"patch":[[{"diffs":[[0,"   \n"],[-1,"        getNeighbourDistance: function(tile, neighbour) {\n            if (tile.x == neighbour.x || tile.y == neighbour.y) {\n                return 1;\n            } else return 1.4;\n        },\n                \n"],[0,"    "]],"start1":843,"start2":843,"length1":217,"length2":8}]],"length":1063,"saved":false}
{"ts":1375950036912,"patch":[[{"diffs":[[0," },\n"],[-1,"                \n        draw: function(ctx, xOffset, yOffset, tileSize) {\n            if (this._path) {\n                this._path.draw(ctx, xOffset, yOffset, tileSize);\n            }\n        }\n"],[0,"    "]],"start1":826,"start2":826,"length1":203,"length2":8}]],"length":868,"saved":false}
{"ts":1375950070401,"patch":[[{"diffs":[[0,"    "],[1,"entity.travelTo("],[0,"this.get"],[-1,"NewPath"],[1,"Target"],[0,"(entity)"],[1,")"],[0,";\n  "]],"start1":322,"start2":322,"length1":31,"length2":47}]],"length":884,"saved":false}
