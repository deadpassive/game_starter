{"ts":1374072278524,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1374072288030,"patch":[[{"diffs":[[1,"/*global namespace*/\n\nvar states = namespace(\"Game.States\");\n\nstates.PathWander = function() {};\n\nstates.PathWander.prototype.execute = function(entity) {\n    // Get a target tile\n    if (!entity.targetX || !entity.targetY) {\n        entity.getTarget();\n    }\n    \n    if (!entity.moveProgress) {\n        entity.moveProgress = 0;\n    }\n    \n    entity.moveProgress += entity.speed;\n    \n    if (entity.moveProgress >= 1) {\n        entity.moveProgress -= 1;\n        entity.x = entity.targetX;\n        entity.y = entity.targetY;\n        // Get a new target\n        entity.getTarget();\n    }\n};"]],"start1":0,"start2":0,"length1":0,"length2":591}]],"length":591,"saved":false}
{"ts":1374072390445,"patch":[[{"diffs":[[0,"pace"],[1," Utils"],[0,"*/\n"],[-1,""],[0,"\nvar"]],"start1":14,"start2":14,"length1":11,"length2":17},{"diffs":[[0,"getY) {\n        "],[-1,"entity"],[1,"this"],[0,".getTarget();\n  "]],"start1":224,"start2":224,"length1":38,"length2":36},{"diffs":[[0,"argetY;\n"],[-1,""],[0,"        "]],"start1":523,"start2":523,"length1":16,"length2":16},{"diffs":[[0,"    }\n};"],[1,"\n\nstates.PathWander.prototype.getTarget = function(entity) {\n    entity.targetX = entity.x + Utils.randomOption([-1, 0, 1]);\n    entity.targetY = entity.y + Utils.randomOption([-1, 0, 1]);\n    if (!entity.world.isValidTile(entity.targetX, entity.targetY)) {\n        entity.getTarget();\n    }\n};"]],"start1":587,"start2":587,"length1":8,"length2":302}]],"length":889,"saved":false}
{"ts":1374072467631,"patch":[[{"diffs":[[0,"    "],[-1,"entity.targetX = entity.x + Utils.randomOption([-1, 0, 1]);\n    entity."],[1,"var "],[0,"target"],[-1,"Y"],[1,"X"],[0," = e"]],"start1":656,"start2":656,"length1":86,"length2":19},{"diffs":[[0,"ity."],[-1,"y + Utils.randomOption([-1, 0, 1]);\n    if (!entity.world.isValidTile(entity.targetX, entity.targetY)) {\n        entity.getTarget();\n    }"],[1,"world.size * Math.random();"],[0,"\n};"]],"start1":677,"start2":677,"length1":145,"length2":34}]],"length":711,"saved":false}
{"ts":1374072490432,"patch":[[{"diffs":[[0,"rgetX = "],[1,"Math.floor("],[0,"entity.w"]],"start1":666,"start2":666,"length1":16,"length2":27},{"diffs":[[0,"random()"],[1,");\n    var targetY = Math.floor(entity.world.size * Math.Random())"],[0,";\n};"]],"start1":710,"start2":710,"length1":12,"length2":78}]],"length":788,"saved":false}
{"ts":1374072511110,"patch":[[{"diffs":[[0,"tity) {\n    "],[-1,"var "],[1,"entity."],[0,"targetX = Ma"]],"start1":648,"start2":648,"length1":28,"length2":31},{"diffs":[[0,"));\n    "],[-1,"var "],[1,"entity."],[0,"targetY "]],"start1":720,"start2":720,"length1":20,"length2":23}]],"length":794,"saved":false}
{"ts":1374072514963,"patch":[[{"diffs":[[0,"ath."],[-1,"R"],[1,"r"],[0,"ando"]],"start1":777,"start2":777,"length1":9,"length2":9}]],"length":794,"saved":false}
{"ts":1374134640646,"patch":[[{"diffs":[[0,"tion() {"],[1,"\n    states.State.call(this, \"PathWander\");\n"],[0,"};\n\nstat"]],"start1":92,"start2":92,"length1":16,"length2":60}]],"length":838,"saved":false}
{"ts":1374134663960,"patch":[[{"diffs":[[0,"er\");\n};"],[1,"\nstates.PathWander.prototype = new states.State();"],[0,"\n\nstates"]],"start1":138,"start2":138,"length1":16,"length2":66}]],"length":888,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374480230357,"patch":[[{"diffs":[[0,"s.State();\n\n"],[1,"states.PathWander.prototype.enter = function(entity) {};\n\n"],[0,"states.PathW"]],"start1":186,"start2":186,"length1":24,"length2":82},{"diffs":[[0,"andom());\n};"],[1,"\n\nstates.PathWander.prototype.aStart = function(entity) {\n    var closedSet = [];\n    var openSet = entity.world.getTile(entity.x, entity.y);\n};"]],"start1":934,"start2":934,"length1":12,"length2":156}]],"length":1090,"saved":false}
{"ts":1374480558272,"patch":[[{"diffs":[[0," this.getTarget("],[-1,""],[0,""],[1,"entity"],[0,");\n    }\n    \n  "]],"start1":391,"start2":391,"length1":32,"length2":38},{"diffs":[[0,"        "],[-1,"entity"],[1,"this"],[0,".getTarg"]],"start1":717,"start2":717,"length1":22,"length2":20},{"diffs":[[0,"tTarget("],[1,"entity"],[0,");\n    }"]],"start1":732,"start2":732,"length1":16,"length2":22},{"diffs":[[0,"var "],[-1,"closedSet = [];\n    var openSet = entity.world.getTile(entity.x, entity.y);"],[1,"startTile = entity.world.getTile(entity.x, entity.y);\n    var closedSet = [];\n    var openSet = [startTile];\n    var cameFrom;\n    var g_score;\n    var f_score;\n    \n    g_score[startTile] = 0;\n    f_score[startTile] = g_score[startTile] + this.heuristic_cost_estimate(startTile)"],[0,"\n};"]],"start1":1018,"start2":1018,"length1":82,"length2":286}]],"length":1304,"saved":false}
{"ts":1374481115438,"patch":[[{"diffs":[[0,"ar start"],[-1,"Tile"],[0," = entit"]],"start1":1019,"start2":1019,"length1":20,"length2":16},{"diffs":[[0," entity.y);\n"],[1,"    var goal = entity.world.getTile(this.targetX, this.targetY);\n"],[0,"    var clos"]],"start1":1060,"start2":1060,"length1":24,"length2":89},{"diffs":[[0,"= [start"],[-1,"Tile"],[0,"];\n    v"]],"start1":1177,"start2":1177,"length1":20,"length2":16},{"diffs":[[0,"_score[start"],[-1,"Tile"],[0,"] = 0;\n    f"]],"start1":1250,"start2":1250,"length1":28,"length2":24},{"diffs":[[0,"re[start"],[-1,"Tile"],[0,"] = g_sc"]],"start1":1278,"start2":1278,"length1":20,"length2":16},{"diffs":[[0,"re[start"],[-1,"Tile"],[0,"] + this"]],"start1":1295,"start2":1295,"length1":20,"length2":16},{"diffs":[[0,"tart"],[-1,"Tile)"],[1,", goal);\n    \n    while (openSet.length > 0) {\n        var current = this.getLowestFScore(openSet, f_score); //the node in openset with lowest f_score\n        if (current == goal)\n            return this.reconstructPath(cameFrom, goal);\n        \n        // remove current from openset\n        var index = openSet.indexOf(current);\n        openSet.splice(index, 1);\n        // add current to closedset\n        closedSet.push(current);\n        \n        // for each neightbour\n        var neighbours = entity.world.neighboursFor(current);\n        for (var i = 0; i < neighbours.length; i++) {\n            \n        }\n    }"],[0,"\n};"]],"start1":1337,"start2":1337,"length1":12,"length2":625}]],"length":1962,"saved":false}
{"ts":1374481333545,"patch":[[{"diffs":[[0,") {\n            "],[1,"var neighbour = neighbours[i];\n            var tentative_g_score = g_score[current] + this.dist_between(current, neighbour);\n            if (openSet.indexOf(neighbour == -1) && tentative_g_score >= g_score[neighbour])\n                continue;"],[0,"\n        }\n    }"]],"start1":1927,"start2":1927,"length1":32,"length2":275}]],"length":2205,"saved":false}
{"ts":1374481890226,"patch":[[{"diffs":[[0,"r closed"],[-1,"S"],[1,"s"],[0,"et = [];"]],"start1":1143,"start2":1143,"length1":17,"length2":17},{"diffs":[[0,"var open"],[-1,"S"],[1,"s"],[0,"et = [st"]],"start1":1165,"start2":1165,"length1":17,"length2":17},{"diffs":[[0,"var came"],[-1,"F"],[1,"_f"],[0,"rom;\n   "]],"start1":1192,"start2":1192,"length1":17,"length2":18},{"diffs":[[0,"le (open"],[-1,"S"],[1,"s"],[0,"et.lengt"]],"start1":1363,"start2":1363,"length1":17,"length2":17},{"diffs":[[0,"ore(open"],[-1,"S"],[1,"s"],[0,"et, f_sc"]],"start1":1428,"start2":1428,"length1":17,"length2":17},{"diffs":[[0,"ath(came"],[-1,"F"],[1,"_f"],[0,"rom, goa"]],"start1":1558,"start2":1558,"length1":17,"length2":18},{"diffs":[[0,"index = open"],[-1,"S"],[1,"s"],[0,"et.indexOf(c"]],"start1":1640,"start2":1640,"length1":25,"length2":25},{"diffs":[[0,"    open"],[-1,"S"],[1,"s"],[0,"et.splic"]],"start1":1678,"start2":1678,"length1":17,"length2":17},{"diffs":[[0,"  closed"],[-1,"S"],[1,"s"],[0,"et.push("]],"start1":1750,"start2":1750,"length1":17,"length2":17},{"diffs":[[0,"if (open"],[-1,"S"],[1,"set.indexOf(neighbour) > 0 && tentative_g_score >= g_score[neighbour])\n                continue;\n                \n            if (opens"],[0,"et.index"]],"start1":2082,"start2":2082,"length1":17,"length2":151},{"diffs":[[0,"bour"],[1,")"],[0," == -1"],[-1,") && tentative_g_score >= g_score[neighbour])\n                continue;\n        }"],[1," || tentative_g_score < g_score[neighbour]) {\n                came_from[neighbour] = current;\n                g_score[neighbour] = tentative_g_score;\n                f_score[neighbour] = g_score[neighbour] + this.heuristic_cost_estimate(neighbour, goal);\n                if (openset.indexOf(neighbour) == -1) {\n                    openset.push(neighbour);\n                }\n            }\n        }\n    }\n    // return failure\n    return null;\n};\n\nstates.PathWander.prototype.reconstructPath = function(came_from, current_node) {\n    // if current node in came from\n    if (came_from[current_node]) {\n        var p = this.reconstructPath(came_from, came_from[current_node])\n        p.push(current_node);\n        return p;\n    } else {\n        return [current_node];"],[0,"\n    }\n}"],[-1,";"]],"start1":2241,"start2":2241,"length1":100,"length2":783}]],"length":3024,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374492919000,"patch":[[{"diffs":[[0,"n null;\n};\n\n"],[1,"states.PathWander.prototype.dist_between = function(tileA, tileB) {\n    if (tileA.x == tileB.x || tileA.y == tileB.y) {\n        return 1;\n    } else return 1.4;\n}\n\n"],[0,"states.PathW"]],"start1":2687,"start2":2687,"length1":24,"length2":188}]],"length":3188,"saved":false}
{"ts":1374492956965,"patch":[[{"diffs":[[0,"] + "],[-1,"this.dist_between(current, neighbour)"],[1,"1"],[0,";\n  "]],"start1":2027,"start2":2027,"length1":45,"length2":9},{"diffs":[[0,"};\n\n"],[-1,"states.PathWander.prototype.dist_between = function(tileA, tileB) {\n    if (tileA.x == tileB.x || tileA.y == tileB.y) {\n        return 1;\n    } else return 1.4;\n}\n\n"],[0,"stat"]],"start1":2659,"start2":2659,"length1":172,"length2":8}]],"length":2988,"saved":false}
