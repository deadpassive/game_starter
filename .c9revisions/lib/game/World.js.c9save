{"ts":1373529425564,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"function World(size) {\n    this.size = size;\n};"]],"start1":0,"start2":0,"length1":0,"length2":47}]],"length":47}
{"ts":1373531750632,"patch":[[{"diffs":[[1,"/*global World*/\n\n"],[0,"function"]],"start1":0,"start2":0,"length1":8,"length2":26}]],"length":65,"saved":false}
{"ts":1373531816232,"patch":[[{"diffs":[[-1,"/*global World*/\n\n"],[0,"func"]],"start1":0,"start2":0,"length1":22,"length2":4}]],"length":47,"saved":false}
{"contributors":[],"silentsave":false,"ts":1373616929482,"patch":[[{"diffs":[[1,"/*global Game*/\nGame.World = "],[0,"function"],[-1," World"],[0,"(siz"]],"start1":0,"start2":0,"length1":18,"length2":41}]],"length":70,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374480287778,"patch":[[{"diffs":[[0,"bal "],[-1,"Game*/\nGame.World = function(size) {\n    this.size = size;\n};"],[1,"namespace*/\n\nvar game = namespace(\"Game\");\nvar entities = namespace(\"Game.Entities\");\n\ngame.World = function(size) {\n    this.size = size;\n    this.tileSize = 20;\n    \n    this.tiles = [];\n    this.entities = [];\n    \n    this.entities[0] = new entities.Tree(\n            Math.floor(Math.random() * size), \n            Math.floor(Math.random() * size));\n    this.entities[1] = new entities.Store(\n            Math.floor(Math.random() * size), \n            Math.floor(Math.random() * size));\n    this.entities[2] = new entities.MovingEntity(\n            Math.floor(Math.random() * size), \n            Math.floor(Math.random() * size), this);\n    \n    for (var i = 0; i < size; i++) {\n        this.tiles[i] = [];\n        for (var j = 0; j < size; j++) {\n            this.tiles[i][j] = new game.Tile(i, j);\n        }\n    }\n};\n\ngame.World.prototype.draw = function(ctx, xOffset, yOffset) {\n    for (var x = 0; x < this.tiles.length; x++) {\n        for (var y = 0; y < this.tiles[x].length; y++) {\n            this.tiles[x][y].draw(ctx, xOffset, yOffset, this.tileSize);\n        }\n    }\n    for (var i = 0; i < this.entities.length; i++) {\n        this.entities[i].draw(ctx, xOffset, yOffset, this.tileSize);\n    }\n};\n\ngame.World.prototype.update = function(e) {\n    for (var i = 0; i < this.entities.length; i++) {\n        this.entities[i].update();\n    }\n};\n\ngame.World.prototype.isValidTile = function(x, y) {\n    return (x >= 0 && y >= 0 && x < this.size && y < this.size);\n}\n\ngame.World.prototype.getTile = function(x, y) {\n    if (this.isValidTile(x, y)) {\n        return this.tiles[x][y];\n    } else return null;\n}\n\ngame.World.prototype.zoomIn = function() {\n    this.tileSize += 5;\n}\n\ngame.World.prototype.zoomOut = function() {\n    this.tileSize = Math.max(this.tileSize -= 5, 5);\n}"]],"start1":5,"start2":5,"length1":65,"length2":1790}]],"length":1795,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374493234245,"patch":[[{"diffs":[[0,"size);\n}"],[1,";"],[0,"\n"],[-1,""],[0,"\ngame.Wo"]],"start1":1475,"start2":1475,"length1":17,"length2":18},{"diffs":[[0," null;\n}"],[1,";\n\ngame.World.prototype.getNeighboursFor = function(tile) {\n    var neighbours = [];\n    for (var x = tile.x - 1; x <= tile.x + 1; x++) {\n        for (var y = tile.y - 1; x <= tile.y + 1; x++) {\n            var neighbour = this.getTile(x, y);\n            if (neighbour !== null && neighbour != tile) {\n                neighbours.push(neighbour);\n            }\n        }\n    }\n};"],[0,"\n\ngame.W"]],"start1":1618,"start2":1618,"length1":16,"length2":394},{"diffs":[[0," += 5;\n}"],[1,";"],[0,"\n\ngame.W"]],"start1":2066,"start2":2066,"length1":16,"length2":17},{"diffs":[[0," 5, 5);\n"],[-1,""],[0,"}"],[1,";"]],"start1":2166,"start2":2166,"length1":9,"length2":10}]],"length":2176,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374653706911,"patch":[[{"diffs":[[0," = [];\n    \n"],[1,"    // must set up tiles before entities\n    for (var i = 0; i < size; i++) {\n        this.tiles[i] = [];\n        for (var j = 0; j < size; j++) {\n            this.tiles[i][j] = new game.Tile(i, j);\n        }\n    }\n    \n"],[0,"    this.ent"]],"start1":215,"start2":215,"length1":24,"length2":244},{"diffs":[[0,"    "],[-1,"for (var i = 0; i < size; i++) {\n        this.tiles[i] = [];\n        for (var j = 0; j < size; j++) {\n            this.tiles[i][j] = new game.Tile(i, j);\n        }\n    }"],[0,"\n};\n"]],"start1":875,"start2":875,"length1":177,"length2":8}]],"length":2227,"saved":false}
{"ts":1374653712076,"patch":[[{"diffs":[[0,"s);\n"],[-1,"    \n    \n"],[0,"};\n\n"]],"start1":866,"start2":866,"length1":18,"length2":8}]],"length":2217,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374850494641,"patch":[[{"diffs":[[0," this);\n"],[1,"    this.entities[3] = new entities.MovingEntity(\n            Math.floor(Math.random() * size), \n            Math.floor(Math.random() * size), this);\n    this.entities[4] = new entities.MovingEntity(\n            Math.floor(Math.random() * size), \n            Math.floor(Math.random() * size), this);\n"],[0,"};\n\ngame"]],"start1":862,"start2":862,"length1":16,"length2":316},{"diffs":[[0,"tile.y - 1; "],[-1,"x"],[1,"y"],[0," <= tile.y +"]],"start1":2126,"start2":2126,"length1":25,"length2":25},{"diffs":[[0,"tile.y + 1; "],[-1,"x"],[1,"y"],[0,"++) {\n      "]],"start1":2143,"start2":2143,"length1":25,"length2":25},{"diffs":[[0,"    }\n    }\n"],[1,"    return neighbours;\n"],[0,"};\n\ngame.Wor"]],"start1":2331,"start2":2331,"length1":24,"length2":47}]],"length":2540,"saved":false}
{"ts":1374850726172,"patch":[[{"diffs":[[0,"    }\n    }\n"],[1,"    // Draw states\n    for (var i = 0; i < this.entities.length; i++) {\n        this.entities[i].draw(ctx, xOffset, yOffset, this.tileSize);\n    }\n    // Draw entities\n"],[0,"    for (var"]],"start1":1420,"start2":1420,"length1":24,"length2":192}]],"length":2708,"saved":false}
{"ts":1374850745074,"patch":[[{"diffs":[[0,".length; i++) {\n"],[1,"        if (this.entities[i].currentState) {\n    "],[0,"        this.ent"]],"start1":1488,"start2":1488,"length1":32,"length2":81},{"diffs":[[0,".tileSize);\n"],[1,"        }\n"],[0,"    }\n    //"]],"start1":1610,"start2":1610,"length1":24,"length2":34}]],"length":2767,"saved":false}
{"ts":1374850750162,"patch":[[{"diffs":[[0,"his.entities[i]."],[1,"currentState."],[0,"draw(ctx, xOffse"]],"start1":1562,"start2":1562,"length1":32,"length2":45}]],"length":2780,"saved":false}
{"ts":1374850826912,"patch":[[{"diffs":[[0," this);\n"],[1,"            \n    for (var i = 0; i < 10; i)\n"],[0,"};\n\ngame"]],"start1":1162,"start2":1162,"length1":16,"length2":60}]],"length":2824,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375085351525,"patch":[[{"diffs":[[0,"    "],[-1,"this.entities[2] = new entities.MovingEntity(\n            Math.floor(Math.random() * size), \n            Math.floor(Math.random() * size), this);\n    this.entities[3] = new entities.MovingEntity(\n            Math.floor(Math.random() * size), \n            Math.floor(Math.random() * size), this);\n"],[1,"        \n    for (var i = 0; i < 10; i++) {\n    "],[0,"    "]],"start1":720,"start2":720,"length1":304,"length2":56},{"diffs":[[0,"ties"],[-1,"[4] = "],[1,".push("],[0,"new "]],"start1":785,"start2":785,"length1":14,"length2":14},{"diffs":[[0,"his)"],[1,")"],[0,";\n    "],[-1,"        \n    for (var i = 0; i < 10; i)"],[1,"}"],[0,"\n};\n"]],"start1":916,"start2":916,"length1":53,"length2":16}]],"length":2539,"saved":false}
{"ts":1375085356226,"patch":[[{"diffs":[[0,"      \n    for ("],[-1,"var "],[0,"i = 0; i < 10; i"]],"start1":726,"start2":726,"length1":36,"length2":32}]],"length":2535,"saved":false}
{"ts":1375085496808,"patch":[[{"diffs":[[0,"unction(tile"],[1,", size"],[0,") {\n"],[-1,""],[0,"    var neig"]],"start1":2006,"start2":2006,"length1":28,"length2":34},{"diffs":[[0,"ile.x - "],[-1,"1"],[1,"size"],[0,"; x <= t"]],"start1":2071,"start2":2071,"length1":17,"length2":20},{"diffs":[[0,"ile.x + "],[-1,"1"],[1,"size"],[0,"; x++) {"]],"start1":2091,"start2":2091,"length1":17,"length2":20},{"diffs":[[0,"ile.y - "],[-1,"1"],[1,"size"],[0,"; y <= t"]],"start1":2134,"start2":2134,"length1":17,"length2":20},{"diffs":[[0,"ile.y + "],[-1,"1"],[1,"size"],[0,"; y++) {"]],"start1":2154,"start2":2154,"length1":17,"length2":20}]],"length":2553,"saved":false}
{"ts":1375085506724,"patch":[[{"diffs":[[0,"bours = [];\n"],[1,"    if (!size) {\n        size = 1;\n    }\n"],[0,"    for (var"]],"start1":2041,"start2":2041,"length1":24,"length2":65}]],"length":2594,"saved":false}
{"ts":1375085516731,"patch":[[{"diffs":[[0," (!size)"],[-1," {\n       "],[0," size = "]],"start1":2059,"start2":2059,"length1":26,"length2":16},{"diffs":[[0,"ze = 1;\n"],[-1,"    }\n"],[0,"    for "]],"start1":2070,"start2":2070,"length1":22,"length2":16}]],"length":2578,"saved":false}
{"ts":1375085603002,"patch":[[{"diffs":[[0,"nction(e) {\n"],[1,"    for (var x = 0; x < this.tiles.length; x++) {\n        for (var y = 0; y < this.tiles[x].length; y++) {\n            this.tiles[x][y].inView = false;\n        }\n    }\n"],[0,"    for (var"]],"start1":1591,"start2":1591,"length1":24,"length2":192}]],"length":2746,"saved":false}
{"ts":1375085739408,"patch":[[{"diffs":[[0,"tities\n    for ("],[-1,"var "],[0,"i = 0; i < this."]],"start1":1420,"start2":1420,"length1":36,"length2":32}]],"length":2742,"saved":false}
{"ts":1375085750710,"patch":[[{"diffs":[[0,"nction(e) {\n"],[1,"    // Clear visible tiles\n"],[0,"    for (var"]],"start1":1587,"start2":1587,"length1":24,"length2":51}]],"length":2769,"saved":false}
{"ts":1375085861751,"patch":[[{"diffs":[[0,"hbours;\n};\n\n"],[1,"game.World.prototype.setTilesVisible = function(source, size) {\n    var neighbours = this.getNeighboursFor(source, size);\n    for (var i = 0; i < neighbours.length; i++) {\n        neighbours[i].inView = true;\n    }\n};\n\n"],[0,"game.World.p"]],"start1":2587,"start2":2587,"length1":24,"length2":243}]],"length":2988,"saved":false}
{"ts":1375085955842,"patch":[[{"diffs":[[0,"i < "],[-1,"10"],[1,"5"],[0,"; i+"]],"start1":749,"start2":749,"length1":10,"length2":9},{"diffs":[[0,"* size),"],[1," 2,"],[0," this));"]],"start1":901,"start2":901,"length1":16,"length2":19}]],"length":2990,"saved":false}
{"ts":1375086174073,"patch":[[{"diffs":[[0,"ze),"],[-1," 2,"],[0," thi"]],"start1":905,"start2":905,"length1":11,"length2":8}]],"length":2987,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375086759442,"patch":[[{"diffs":[[0,"rce, size);\n"],[1,"    neighbours.push(source);\n"],[0,"    for (var"]],"start1":2708,"start2":2708,"length1":24,"length2":53}]],"length":3016,"saved":false}
{"ts":1375086822756,"patch":[[{"diffs":[[0,"source, size"],[1,", round"],[0,") {\n    var "]],"start1":2646,"start2":2646,"length1":24,"length2":31}]],"length":3023,"saved":false}
{"ts":1375086923996,"patch":[[{"diffs":[[0,"rce, size);\n"],[1,"    \n"],[0,"    neighbou"]],"start1":2715,"start2":2715,"length1":24,"length2":29}]],"length":3028,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375108853593,"patch":[[{"diffs":[[0,") {\n        "],[-1,"if ("],[0,"this.entitie"]],"start1":1254,"start2":1254,"length1":28,"length2":24},{"diffs":[[0,"[i]."],[-1,"currentState) {\n            this.entities[i].currentStat"],[1,"stateMachin"],[0,"e.dr"]],"start1":1279,"start2":1279,"length1":64,"length2":19},{"diffs":[[0,".tileSize);\n"],[-1,"        }\n"],[0,"    }\n    //"]],"start1":1328,"start2":1328,"length1":34,"length2":24},{"diffs":[[0,"= true;\n"],[1,"        neighbours[i].explored = true;\n"],[0,"    }\n};"]],"start1":2781,"start2":2781,"length1":16,"length2":55}]],"length":3008,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375430702680,"patch":[[{"diffs":[[0,"*/\n\nvar "],[-1,"g"],[1,"G"],[0,"ame = na"]],"start1":18,"start2":18,"length1":17,"length2":17},{"diffs":[[0,"Game\");\n"],[1,"var GClass = namespace(\"GClass\");\n"],[0,"var enti"]],"start1":44,"start2":44,"length1":16,"length2":50},{"diffs":[[0,"ies\");\n\n"],[-1,"g"],[1,"G"],[0,"ame.Worl"]],"start1":122,"start2":122,"length1":17,"length2":17},{"diffs":[[0,".World ="],[1," (function() {\n    // Constructor\n    var $this ="],[0," functio"]],"start1":134,"start2":134,"length1":16,"length2":65},{"diffs":[[0,"size) {\n    "],[1,"    "],[0,"this.size = "]],"start1":201,"start2":201,"length1":24,"length2":28},{"diffs":[[0,"= size;\n    "],[1,"    "],[0,"this.tileSiz"]],"start1":227,"start2":227,"length1":24,"length2":28},{"diffs":[[0,"e = 20;\n    "],[-1,"\n"],[1,"    \n    "],[0,"    this.til"]],"start1":255,"start2":255,"length1":25,"length2":33},{"diffs":[[0,"s = [];\n    "],[1,"    "],[0,"this.entitie"]],"start1":289,"start2":289,"length1":24,"length2":28},{"diffs":[[0,"[];\n    "],[-1,"\n"],[1,"    \n   "],[0,"    "],[1," "],[0,"// must "]],"start1":321,"start2":321,"length1":21,"length2":29},{"diffs":[[0,"before entities\n"],[1,"    "],[0,"    for (var i ="]],"start1":363,"start2":363,"length1":32,"length2":36},{"diffs":[[0," < size; i++) {\n"],[1,"    "],[0,"        this.til"]],"start1":404,"start2":404,"length1":32,"length2":36},{"diffs":[[0,"] = [];\n        "],[1,"    "],[0,"for (var j = 0; "]],"start1":444,"start2":444,"length1":32,"length2":36},{"diffs":[[0,") {\n            "],[1,"    "],[0,"this.tiles[i][j]"]],"start1":493,"start2":493,"length1":32,"length2":36},{"diffs":[[0,"] = new "],[-1,"g"],[1,"G"],[0,"ame.Tile"]],"start1":528,"start2":528,"length1":17,"length2":17},{"diffs":[[0,"    "],[-1,"}\n"],[1,"    }\n   "],[0,"    "],[1," "],[0,"}\n    "],[1,"    "],[0,"\n"],[1,"    "],[0,"    "]],"start1":557,"start2":557,"length1":21,"length2":37},{"diffs":[[0,"ties"],[-1,"[0] = "],[1,".push("],[0,"new "]],"start1":603,"start2":603,"length1":14,"length2":14},{"diffs":[[0,"ree("],[-1,"\n            Math.floor(Math.random() * size), \n            Math.floor(Math.random() * size));\n"],[1,"this.randomTile(), this));\n    "],[0,"    "]],"start1":627,"start2":627,"length1":103,"length2":39},{"diffs":[[0,"ties"],[-1,"[1] = "],[1,".push("],[0,"new "]],"start1":675,"start2":675,"length1":14,"length2":14},{"diffs":[[0,"ore("],[-1,"\n            Math.floor(Math.random() * size), \n            Math.floor(Math.random() * size));\n   "],[1,"this.randomTile(), this));\n                \n"],[0,"    "],[-1,"     \n"],[0,"    "]],"start1":700,"start2":700,"length1":116,"length2":56},{"diffs":[[0," 0; i < "],[-1,"5"],[1,"1"],[0,"; i++) {"]],"start1":764,"start2":764,"length1":17,"length2":17},{"diffs":[[0,"; i < 1; i++) {\n"],[1,"    "],[0,"        this.ent"]],"start1":766,"start2":766,"length1":32,"length2":36},{"diffs":[[0,"ies."],[-1,"MovingEntity(\n            "],[1,"Civilian(this.randomTile(), this));\n        }\n    }\n    \n    // Class functions\n    GClass.extend(Object, $this, {\n        randomTile: function() {\n            return this.getTile("],[0,"Math"]],"start1":822,"start2":822,"length1":34,"length2":188},{"diffs":[[0,".random() * "],[1,"this."],[0,"size), \n    "]],"start1":1021,"start2":1021,"length1":24,"length2":29},{"diffs":[[0,"        "],[1,"        "],[0,"Math.flo"]],"start1":1050,"start2":1050,"length1":16,"length2":24},{"diffs":[[0,") * "],[-1,"size), this"],[1,"this.size"],[0,"));\n    "],[-1,"}\n};\n\ngame.World.prototype."],[1,"    },\n        \n        "],[0,"draw"],[-1," ="],[1,":"],[0," fun"]],"start1":1089,"start2":1089,"length1":60,"length2":54},{"diffs":[[0," yOffset) {\n"],[1,"        "],[0,"    for (var"]],"start1":1162,"start2":1162,"length1":24,"length2":32},{"diffs":[[0," x++) {\n        "],[1,"        "],[0,"for (var y = 0; "]],"start1":1224,"start2":1224,"length1":32,"length2":40},{"diffs":[[0,".length; y++) {\n"],[1,"        "],[0,"            this"]],"start1":1281,"start2":1281,"length1":32,"length2":40},{"diffs":[[0,"e);\n        "],[-1,"}\n    }\n"],[1,"        }\n            }\n        "],[0,"    // Draw "]],"start1":1374,"start2":1374,"length1":32,"length2":56},{"diffs":[[0," states\n"],[1,"        "],[0,"    for "]],"start1":1429,"start2":1429,"length1":16,"length2":24},{"diffs":[[0," i++) {\n        "],[1,"        "],[0,"this.entities[i]"]],"start1":1490,"start2":1490,"length1":32,"length2":40},{"diffs":[[0,"eSize);\n    "],[-1,"}\n"],[1,"        }\n        "],[0,"    // Draw "]],"start1":1580,"start2":1580,"length1":26,"length2":42},{"diffs":[[0,"aw entities\n"],[1,"        "],[0,"    for (i ="]],"start1":1619,"start2":1619,"length1":24,"length2":32},{"diffs":[[0," i++) {\n        "],[1,"        "],[0,"this.entities[i]"]],"start1":1680,"start2":1680,"length1":32,"length2":40},{"diffs":[[0,"    "],[-1,"}\n};\n\ngame.World.prototype."],[1,"        }\n            // Draw selectionss\n            for (x = 0; x < this.tiles.length; x++) {\n                for (y = 0; y < this.tiles[x].length; y++) {\n                    this.tiles[x][y].drawSelected(ctx, xOffset, yOffset, this.tileSize);\n                }\n            }\n        },\n        \n        "],[0,"update"],[-1," ="],[1,":"],[0," fun"]],"start1":1765,"start2":1765,"length1":43,"length2":321},{"diffs":[[0,"nction(e) {\n"],[1,"        "],[0,"    // Clear"]],"start1":2085,"start2":2085,"length1":24,"length2":32},{"diffs":[[0,"e tiles\n"],[1,"        "],[0,"    for "]],"start1":2124,"start2":2124,"length1":16,"length2":24},{"diffs":[[0," x++) {\n        "],[1,"        "],[0,"for (var y = 0; "]],"start1":2182,"start2":2182,"length1":32,"length2":40},{"diffs":[[0,") {\n            "],[1,"        "],[0,"this.tiles[x][y]"]],"start1":2251,"start2":2251,"length1":32,"length2":40},{"diffs":[[0,"se;\n        "],[1,"        "],[0,"}\n    "],[-1,"}\n"],[1,"        }\n        "],[0,"    for (var"]],"start1":2304,"start2":2304,"length1":32,"length2":56},{"diffs":[[0,".length; i++) {\n"],[1,"        "],[0,"        this.ent"]],"start1":2385,"start2":2385,"length1":32,"length2":40},{"diffs":[[0,"    "],[-1,"}\n};\n\ngame.World.prototype.isValidTile ="],[1,"        }\n        },\n        \n        selectTile: function(x, y, xOffset, yOffset) {\n            var xTilePos = Math.floor((x - xOffset) / this.tileSize);\n            var yTilePos = Math.floor((y - yOffset) / this.tileSize);\n            var tile = this.getTile(xTilePos, yTilePos);\n            if (tile && tile !== null) {\n                if (this.selectedTile) {\n                    this.selectedTile.selected = false;\n                }\n                tile.selected = true;\n                this.selectedTile = tile;\n                // TODO: fire some kind of event\n            }\n        },\n        \n        isValidTile:"],[0," fun"]],"start1":2444,"start2":2444,"length1":48,"length2":629},{"diffs":[[0,"ion(x, y) {\n"],[1,"        "],[0,"    return ("]],"start1":3075,"start2":3075,"length1":24,"length2":32},{"diffs":[[0,"e);\n"],[-1,"};\n\ngame.World.prototype."],[1,"        },\n        \n        "],[0,"getTile"],[-1," ="],[1,":"],[0," fun"]],"start1":3156,"start2":3156,"length1":42,"length2":44},{"diffs":[[0,"ion(x, y) {\n"],[1,"        "],[0,"    if (this"]],"start1":3202,"start2":3202,"length1":24,"length2":32},{"diffs":[[0,", y)) {\n        "],[1,"        "],[0,"return this.tile"]],"start1":3248,"start2":3248,"length1":32,"length2":40},{"diffs":[[0,"[x][y];\n"],[1,"        "],[0,"    } el"]],"start1":3289,"start2":3289,"length1":16,"length2":24},{"diffs":[[0,"ll;\n"],[-1,"};\n\ngame.World.prototype."],[1,"        },\n        \n        "],[0,"getN"]],"start1":3325,"start2":3325,"length1":33,"length2":36},{"diffs":[[0,"boursFor"],[-1," ="],[1,":"],[0," functio"]],"start1":3365,"start2":3365,"length1":18,"length2":17},{"diffs":[[0,"le, size) {\n"],[1,"        "],[0,"    var neig"]],"start1":3386,"start2":3386,"length1":24,"length2":32},{"diffs":[[0,"bours = [];\n"],[1,"        "],[0,"    if (!siz"]],"start1":3419,"start2":3419,"length1":24,"length2":32},{"diffs":[[0,"ze = 1;\n"],[1,"        "],[0,"    for "]],"start1":3456,"start2":3456,"length1":16,"length2":24},{"diffs":[[0," x++) {\n        "],[1,"        "],[0,"for (var y = til"]],"start1":3523,"start2":3523,"length1":32,"length2":40},{"diffs":[[0,") {\n            "],[1,"        "],[0,"var neighbour = "]],"start1":3598,"start2":3598,"length1":32,"length2":40},{"diffs":[[0,"            "],[1,"        "],[0,"if (neighbou"]],"start1":3658,"start2":3658,"length1":24,"length2":32},{"diffs":[[0,"                "],[1,"        "],[0,"neighbours.push("]],"start1":3725,"start2":3725,"length1":32,"length2":40},{"diffs":[[0,"    "],[-1,"}\n"],[1,"        }\n     "],[0,"        "],[1,"   "],[0,"}\n    "],[-1,"}\n"],[1,"        }\n        "],[0,"    "]],"start1":3785,"start2":3785,"length1":26,"length2":58},{"diffs":[[0,"rs;\n"],[-1,"};\n\ngame.World.prototype."],[1,"        },\n        \n        "],[0,"setT"]],"start1":3858,"start2":3858,"length1":33,"length2":36},{"diffs":[[0,"sVisible"],[-1," ="],[1,":"],[0," functio"]],"start1":3897,"start2":3897,"length1":18,"length2":17},{"diffs":[[0,"e, round) {\n"],[1,"        "],[0,"    var neig"]],"start1":3927,"start2":3927,"length1":24,"length2":32},{"diffs":[[0," size);\n    "],[-1,"\n"],[1,"        \n        "],[0,"    neighbou"]],"start1":3997,"start2":3997,"length1":25,"length2":41},{"diffs":[[0,"sh(source);\n"],[1,"        "],[0,"    for (var"]],"start1":4043,"start2":4043,"length1":24,"length2":32},{"diffs":[[0,".length; i++) {\n"],[1,"                if (!round || source.straightLineDistance(neighbours[i]) < size) {\n            "],[0,"        neighbou"]],"start1":4097,"start2":4097,"length1":32,"length2":127},{"diffs":[[0,".inView = true;\n"],[1,"            "],[0,"        neighbou"]],"start1":4229,"start2":4229,"length1":32,"length2":44},{"diffs":[[0,"    "],[-1,"}\n};\n\ngame.World.prototype."],[1,"            }\n            }\n        },\n        \n        "],[0,"zoomIn"],[-1," ="],[1,":"],[0," fun"]],"start1":4296,"start2":4296,"length1":43,"length2":71},{"diffs":[[0,"n: function() {\n"],[1,"        "],[0,"    this.tileSiz"]],"start1":4361,"start2":4361,"length1":32,"length2":40},{"diffs":[[0," 5;\n"],[-1,"};\n\ngame.World.prototype."],[1,"        },\n        \n        "],[0,"zoomOut"],[-1," ="],[1,":"],[0," fun"]],"start1":4405,"start2":4405,"length1":42,"length2":44},{"diffs":[[0,"unction() {\n"],[1,"        "],[0,"    this.til"]],"start1":4447,"start2":4447,"length1":24,"length2":32},{"diffs":[[0,"5);\n"],[-1,"};"],[1,"        }\n    });\n})();\n\n"]],"start1":4516,"start2":4516,"length1":6,"length2":29}]],"length":4545,"saved":false}
