{"ts":1373529425564,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"function World(size) {\n    this.size = size;\n};"]],"start1":0,"start2":0,"length1":0,"length2":47}]],"length":47}
{"ts":1373531750632,"patch":[[{"diffs":[[1,"/*global World*/\n\n"],[0,"function"]],"start1":0,"start2":0,"length1":8,"length2":26}]],"length":65,"saved":false}
{"ts":1373531816232,"patch":[[{"diffs":[[-1,"/*global World*/\n\n"],[0,"func"]],"start1":0,"start2":0,"length1":22,"length2":4}]],"length":47,"saved":false}
{"contributors":[],"silentsave":false,"ts":1373616929482,"patch":[[{"diffs":[[1,"/*global Game*/\nGame.World = "],[0,"function"],[-1," World"],[0,"(siz"]],"start1":0,"start2":0,"length1":18,"length2":41}]],"length":70,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374480287778,"patch":[[{"diffs":[[0,"bal "],[-1,"Game*/\nGame.World = function(size) {\n    this.size = size;\n};"],[1,"namespace*/\n\nvar game = namespace(\"Game\");\nvar entities = namespace(\"Game.Entities\");\n\ngame.World = function(size) {\n    this.size = size;\n    this.tileSize = 20;\n    \n    this.tiles = [];\n    this.entities = [];\n    \n    this.entities[0] = new entities.Tree(\n            Math.floor(Math.random() * size), \n            Math.floor(Math.random() * size));\n    this.entities[1] = new entities.Store(\n            Math.floor(Math.random() * size), \n            Math.floor(Math.random() * size));\n    this.entities[2] = new entities.MovingEntity(\n            Math.floor(Math.random() * size), \n            Math.floor(Math.random() * size), this);\n    \n    for (var i = 0; i < size; i++) {\n        this.tiles[i] = [];\n        for (var j = 0; j < size; j++) {\n            this.tiles[i][j] = new game.Tile(i, j);\n        }\n    }\n};\n\ngame.World.prototype.draw = function(ctx, xOffset, yOffset) {\n    for (var x = 0; x < this.tiles.length; x++) {\n        for (var y = 0; y < this.tiles[x].length; y++) {\n            this.tiles[x][y].draw(ctx, xOffset, yOffset, this.tileSize);\n        }\n    }\n    for (var i = 0; i < this.entities.length; i++) {\n        this.entities[i].draw(ctx, xOffset, yOffset, this.tileSize);\n    }\n};\n\ngame.World.prototype.update = function(e) {\n    for (var i = 0; i < this.entities.length; i++) {\n        this.entities[i].update();\n    }\n};\n\ngame.World.prototype.isValidTile = function(x, y) {\n    return (x >= 0 && y >= 0 && x < this.size && y < this.size);\n}\n\ngame.World.prototype.getTile = function(x, y) {\n    if (this.isValidTile(x, y)) {\n        return this.tiles[x][y];\n    } else return null;\n}\n\ngame.World.prototype.zoomIn = function() {\n    this.tileSize += 5;\n}\n\ngame.World.prototype.zoomOut = function() {\n    this.tileSize = Math.max(this.tileSize -= 5, 5);\n}"]],"start1":5,"start2":5,"length1":65,"length2":1790}]],"length":1795,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374493234245,"patch":[[{"diffs":[[0,"size);\n}"],[1,";"],[0,"\n"],[-1,""],[0,"\ngame.Wo"]],"start1":1475,"start2":1475,"length1":17,"length2":18},{"diffs":[[0," null;\n}"],[1,";\n\ngame.World.prototype.getNeighboursFor = function(tile) {\n    var neighbours = [];\n    for (var x = tile.x - 1; x <= tile.x + 1; x++) {\n        for (var y = tile.y - 1; x <= tile.y + 1; x++) {\n            var neighbour = this.getTile(x, y);\n            if (neighbour !== null && neighbour != tile) {\n                neighbours.push(neighbour);\n            }\n        }\n    }\n};"],[0,"\n\ngame.W"]],"start1":1618,"start2":1618,"length1":16,"length2":394},{"diffs":[[0," += 5;\n}"],[1,";"],[0,"\n\ngame.W"]],"start1":2066,"start2":2066,"length1":16,"length2":17},{"diffs":[[0," 5, 5);\n"],[-1,""],[0,"}"],[1,";"]],"start1":2166,"start2":2166,"length1":9,"length2":10}]],"length":2176,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374653706911,"patch":[[{"diffs":[[0," = [];\n    \n"],[1,"    // must set up tiles before entities\n    for (var i = 0; i < size; i++) {\n        this.tiles[i] = [];\n        for (var j = 0; j < size; j++) {\n            this.tiles[i][j] = new game.Tile(i, j);\n        }\n    }\n    \n"],[0,"    this.ent"]],"start1":215,"start2":215,"length1":24,"length2":244},{"diffs":[[0,"    "],[-1,"for (var i = 0; i < size; i++) {\n        this.tiles[i] = [];\n        for (var j = 0; j < size; j++) {\n            this.tiles[i][j] = new game.Tile(i, j);\n        }\n    }"],[0,"\n};\n"]],"start1":875,"start2":875,"length1":177,"length2":8}]],"length":2227,"saved":false}
{"ts":1374653712076,"patch":[[{"diffs":[[0,"s);\n"],[-1,"    \n    \n"],[0,"};\n\n"]],"start1":866,"start2":866,"length1":18,"length2":8}]],"length":2217,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374850494641,"patch":[[{"diffs":[[0," this);\n"],[1,"    this.entities[3] = new entities.MovingEntity(\n            Math.floor(Math.random() * size), \n            Math.floor(Math.random() * size), this);\n    this.entities[4] = new entities.MovingEntity(\n            Math.floor(Math.random() * size), \n            Math.floor(Math.random() * size), this);\n"],[0,"};\n\ngame"]],"start1":862,"start2":862,"length1":16,"length2":316},{"diffs":[[0,"tile.y - 1; "],[-1,"x"],[1,"y"],[0," <= tile.y +"]],"start1":2126,"start2":2126,"length1":25,"length2":25},{"diffs":[[0,"tile.y + 1; "],[-1,"x"],[1,"y"],[0,"++) {\n      "]],"start1":2143,"start2":2143,"length1":25,"length2":25},{"diffs":[[0,"    }\n    }\n"],[1,"    return neighbours;\n"],[0,"};\n\ngame.Wor"]],"start1":2331,"start2":2331,"length1":24,"length2":47}]],"length":2540,"saved":false}
{"ts":1374850726172,"patch":[[{"diffs":[[0,"    }\n    }\n"],[1,"    // Draw states\n    for (var i = 0; i < this.entities.length; i++) {\n        this.entities[i].draw(ctx, xOffset, yOffset, this.tileSize);\n    }\n    // Draw entities\n"],[0,"    for (var"]],"start1":1420,"start2":1420,"length1":24,"length2":192}]],"length":2708,"saved":false}
{"ts":1374850745074,"patch":[[{"diffs":[[0,".length; i++) {\n"],[1,"        if (this.entities[i].currentState) {\n    "],[0,"        this.ent"]],"start1":1488,"start2":1488,"length1":32,"length2":81},{"diffs":[[0,".tileSize);\n"],[1,"        }\n"],[0,"    }\n    //"]],"start1":1610,"start2":1610,"length1":24,"length2":34}]],"length":2767,"saved":false}
{"ts":1374850750162,"patch":[[{"diffs":[[0,"his.entities[i]."],[1,"currentState."],[0,"draw(ctx, xOffse"]],"start1":1562,"start2":1562,"length1":32,"length2":45}]],"length":2780,"saved":false}
{"ts":1374850826912,"patch":[[{"diffs":[[0," this);\n"],[1,"            \n    for (var i = 0; i < 10; i)\n"],[0,"};\n\ngame"]],"start1":1162,"start2":1162,"length1":16,"length2":60}]],"length":2824,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375085351525,"patch":[[{"diffs":[[0,"    "],[-1,"this.entities[2] = new entities.MovingEntity(\n            Math.floor(Math.random() * size), \n            Math.floor(Math.random() * size), this);\n    this.entities[3] = new entities.MovingEntity(\n            Math.floor(Math.random() * size), \n            Math.floor(Math.random() * size), this);\n"],[1,"        \n    for (var i = 0; i < 10; i++) {\n    "],[0,"    "]],"start1":720,"start2":720,"length1":304,"length2":56},{"diffs":[[0,"ties"],[-1,"[4] = "],[1,".push("],[0,"new "]],"start1":785,"start2":785,"length1":14,"length2":14},{"diffs":[[0,"his)"],[1,")"],[0,";\n    "],[-1,"        \n    for (var i = 0; i < 10; i)"],[1,"}"],[0,"\n};\n"]],"start1":916,"start2":916,"length1":53,"length2":16}]],"length":2539,"saved":false}
{"ts":1375085356226,"patch":[[{"diffs":[[0,"      \n    for ("],[-1,"var "],[0,"i = 0; i < 10; i"]],"start1":726,"start2":726,"length1":36,"length2":32}]],"length":2535,"saved":false}
{"ts":1375085496808,"patch":[[{"diffs":[[0,"unction(tile"],[1,", size"],[0,") {\n"],[-1,""],[0,"    var neig"]],"start1":2006,"start2":2006,"length1":28,"length2":34},{"diffs":[[0,"ile.x - "],[-1,"1"],[1,"size"],[0,"; x <= t"]],"start1":2071,"start2":2071,"length1":17,"length2":20},{"diffs":[[0,"ile.x + "],[-1,"1"],[1,"size"],[0,"; x++) {"]],"start1":2091,"start2":2091,"length1":17,"length2":20},{"diffs":[[0,"ile.y - "],[-1,"1"],[1,"size"],[0,"; y <= t"]],"start1":2134,"start2":2134,"length1":17,"length2":20},{"diffs":[[0,"ile.y + "],[-1,"1"],[1,"size"],[0,"; y++) {"]],"start1":2154,"start2":2154,"length1":17,"length2":20}]],"length":2553,"saved":false}
{"ts":1375085506724,"patch":[[{"diffs":[[0,"bours = [];\n"],[1,"    if (!size) {\n        size = 1;\n    }\n"],[0,"    for (var"]],"start1":2041,"start2":2041,"length1":24,"length2":65}]],"length":2594,"saved":false}
{"ts":1375085516731,"patch":[[{"diffs":[[0," (!size)"],[-1," {\n       "],[0," size = "]],"start1":2059,"start2":2059,"length1":26,"length2":16},{"diffs":[[0,"ze = 1;\n"],[-1,"    }\n"],[0,"    for "]],"start1":2070,"start2":2070,"length1":22,"length2":16}]],"length":2578,"saved":false}
{"ts":1375085603002,"patch":[[{"diffs":[[0,"nction(e) {\n"],[1,"    for (var x = 0; x < this.tiles.length; x++) {\n        for (var y = 0; y < this.tiles[x].length; y++) {\n            this.tiles[x][y].inView = false;\n        }\n    }\n"],[0,"    for (var"]],"start1":1591,"start2":1591,"length1":24,"length2":192}]],"length":2746,"saved":false}
{"ts":1375085739408,"patch":[[{"diffs":[[0,"tities\n    for ("],[-1,"var "],[0,"i = 0; i < this."]],"start1":1420,"start2":1420,"length1":36,"length2":32}]],"length":2742,"saved":false}
{"ts":1375085750710,"patch":[[{"diffs":[[0,"nction(e) {\n"],[1,"    // Clear visible tiles\n"],[0,"    for (var"]],"start1":1587,"start2":1587,"length1":24,"length2":51}]],"length":2769,"saved":false}
{"ts":1375085861751,"patch":[[{"diffs":[[0,"hbours;\n};\n\n"],[1,"game.World.prototype.setTilesVisible = function(source, size) {\n    var neighbours = this.getNeighboursFor(source, size);\n    for (var i = 0; i < neighbours.length; i++) {\n        neighbours[i].inView = true;\n    }\n};\n\n"],[0,"game.World.p"]],"start1":2587,"start2":2587,"length1":24,"length2":243}]],"length":2988,"saved":false}
{"ts":1375085955842,"patch":[[{"diffs":[[0,"i < "],[-1,"10"],[1,"5"],[0,"; i+"]],"start1":749,"start2":749,"length1":10,"length2":9},{"diffs":[[0,"* size),"],[1," 2,"],[0," this));"]],"start1":901,"start2":901,"length1":16,"length2":19}]],"length":2990,"saved":false}
{"ts":1375086174073,"patch":[[{"diffs":[[0,"ze),"],[-1," 2,"],[0," thi"]],"start1":905,"start2":905,"length1":11,"length2":8}]],"length":2987,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375086759442,"patch":[[{"diffs":[[0,"rce, size);\n"],[1,"    neighbours.push(source);\n"],[0,"    for (var"]],"start1":2708,"start2":2708,"length1":24,"length2":53}]],"length":3016,"saved":false}
{"ts":1375086822756,"patch":[[{"diffs":[[0,"source, size"],[1,", round"],[0,") {\n    var "]],"start1":2646,"start2":2646,"length1":24,"length2":31}]],"length":3023,"saved":false}
{"ts":1375086923996,"patch":[[{"diffs":[[0,"rce, size);\n"],[1,"    \n"],[0,"    neighbou"]],"start1":2715,"start2":2715,"length1":24,"length2":29}]],"length":3028,"saved":false}
