{"ts":1373639630553,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1373639636411,"patch":[[{"diffs":[[1,"var Game = Game || {};\n"]],"start1":0,"start2":0,"length1":0,"length2":23}]],"length":23,"saved":false}
{"ts":1373639645016,"patch":[[{"diffs":[[0,"var "],[-1,"Game = Game"],[1,"Utils = Utils"],[0," || "]],"start1":0,"start2":0,"length1":19,"length2":21}]],"length":25,"saved":false}
{"ts":1373639677249,"patch":[[{"diffs":[[0," || {};\n"],[1,"\nUtils.prototype.isEven = function(number) {\n    return (number % 2 === 0);\n}"]],"start1":17,"start2":17,"length1":8,"length2":85}]],"length":102,"saved":false}
{"contributors":[],"silentsave":false,"ts":1373640141780,"patch":[[{"diffs":[[0,"|| {"],[-1,"};\n\nUtils.prototype."],[1,"\n    "],[0,"isEven"],[-1," ="],[1,":"],[0," fun"]],"start1":18,"start2":18,"length1":36,"length2":20},{"diffs":[[0,") {\n    "],[1,"   "],[1," "],[0,"return ("]],"start1":50,"start2":50,"length1":16,"length2":20},{"diffs":[[0,"0);\n"],[-1,"}"],[1,"    }\n};\n"]],"start1":85,"start2":85,"length1":5,"length2":13}]],"length":98,"saved":false}
{"contributors":[],"silentsave":false,"ts":1373898605087,"patch":[[{"diffs":[[0,"   }\n};\n"],[1,"\nUtils.createNS = function (namespace) {\n    var nsparts = namespace.split(\".\");\n    var parent = Utils;\n \n    // we want to be able to include or exclude the root namespace so we strip\n    // it if it's in the namespace\n    if (nsparts[0] === \"MYAPPLICATION\") {\n        nsparts = nsparts.slice(1);\n    }\n \n    // loop through the parts and create a nested namespace if necessary\n    for (var i = 0; i < nsparts.length; i++) {\n        var partname = nsparts[i];\n        // check if the current parent already has the namespace declared\n        // if it isn't, then create it\n        if (typeof parent[partname] === \"undefined\") {\n            parent[partname] = {};\n        }\n        // get a reference to the deepest element in the hierarchy so far\n        parent = parent[partname];\n    }\n    // the parent is now constructed with empty namespaces and can be used.\n    // we return the outermost namespace\n    return parent;\n};"]],"start1":90,"start2":90,"length1":8,"length2":936}]],"length":1026,"saved":false}
{"contributors":[],"silentsave":false,"ts":1373899134909,"patch":[[{"diffs":[[0,"== \""],[-1,"MYAPPLICATION"],[1,"Utils"],[0,"\") {"]],"start1":339,"start2":339,"length1":21,"length2":13},{"diffs":[[0,"rent;\n};"],[1,"\n"]],"start1":1010,"start2":1010,"length1":8,"length2":9}]],"length":1019,"saved":false}
{"ts":1373900279379,"patch":[[{"diffs":[[0,"  }\n};\n\n"],[1,"function namespace(namespaceString) {\n    var parts = namespaceString.split('.'),\n        parent = window,\n        currentPart = '';    \n        \n    for(var i = 0, length = parts.length; i < length; i++) {\n        currentPart = parts[i];\n        parent[currentPart] = parent[currentPart] || {};\n        parent = parent[currentPart];\n    }\n    \n    return parent;\n}\n\n// "],[0,"Utils.cr"]],"start1":91,"start2":91,"length1":16,"length2":386},{"diffs":[[0,"amespace) {\n"],[1,"// "],[0,"    var nspa"]],"start1":497,"start2":497,"length1":24,"length2":27},{"diffs":[[0,"t(\".\");\n"],[1,"// "],[0,"    var "]],"start1":544,"start2":544,"length1":16,"length2":19},{"diffs":[[0,"tils;\n \n"],[1,"// "],[0,"    // w"]],"start1":573,"start2":573,"length1":16,"length2":19},{"diffs":[[0,"e strip\n"],[1,"// "],[0,"    // i"]],"start1":655,"start2":655,"length1":16,"length2":19},{"diffs":[[0,"e namespace\n"],[1,"// "],[0,"    if (nspa"]],"start1":689,"start2":689,"length1":24,"length2":27},{"diffs":[[0," \"Utils\") {\n"],[1,"// "],[0,"        nspa"]],"start1":726,"start2":726,"length1":24,"length2":27},{"diffs":[[0,"1);\n"],[1,"// "],[0,"    }\n \n"],[1,"// "],[0,"    "]],"start1":773,"start2":773,"length1":16,"length2":22},{"diffs":[[0,"cessary\n"],[1,"//"],[0,"    "],[1," "],[0,"for (var"]],"start1":856,"start2":856,"length1":20,"length2":23},{"diffs":[[0,".length; i++) {\n"],[1,"// "],[0,"        var part"]],"start1":898,"start2":898,"length1":32,"length2":35},{"diffs":[[0,"e = nsparts[i];\n"],[1,"// "],[0,"        // check"]],"start1":936,"start2":936,"length1":32,"length2":35},{"diffs":[[0,"eclared\n"],[1,"// "],[0,"        "]],"start1":1021,"start2":1021,"length1":16,"length2":19},{"diffs":[[0,"eate it\n"],[1,"// "],[0,"        "]],"start1":1063,"start2":1063,"length1":16,"length2":19},{"diffs":[[0,"defined\") {\n"],[1,"// "],[0,"            "]],"start1":1117,"start2":1117,"length1":24,"length2":27},{"diffs":[[0,"name] = {};\n"],[1,"// "],[0,"        }\n  "]],"start1":1155,"start2":1155,"length1":24,"length2":27},{"diffs":[[0,"/         }\n"],[1,"// "],[0,"        // g"]],"start1":1168,"start2":1168,"length1":24,"length2":27},{"diffs":[[0," so far\n"],[1,"// "],[0,"        "]],"start1":1249,"start2":1249,"length1":16,"length2":19},{"diffs":[[0,"tname];\n"],[1,"//"],[0,"    "],[1," "],[0,"}\n"],[1,"// "],[0,"    // t"]],"start1":1287,"start2":1287,"length1":22,"length2":28},{"diffs":[[0,"e used.\n"],[1,"// "],[0,"    // w"]],"start1":1375,"start2":1375,"length1":16,"length2":19},{"diffs":[[0,"mespace\n"],[1,"// "],[0,"    retu"]],"start1":1419,"start2":1419,"length1":16,"length2":19},{"diffs":[[0,"parent;\n"],[1,"// "],[0,"};\n"]],"start1":1441,"start2":1441,"length1":11,"length2":14}]],"length":1455,"saved":false}
{"contributors":[],"silentsave":false,"ts":1373900565392,"patch":[[{"diffs":[[0,");\n    }"],[1,",\n    \n    randomBoolean: function() {\n        return Math.random() >= 0.5;\n    }\n};\n\nRead more: http://forum.pclayer.com/random-boolean-t52788.html#ixzz2Z7usHiFK"],[0,"\n};\n\nfun"]],"start1":86,"start2":86,"length1":16,"length2":178}]],"length":1617,"saved":false}
{"ts":1373900575196,"patch":[[{"diffs":[[0,"};\n\n"],[-1,"Read more: http://forum.pclayer.com/random-boolean-t52788.html#ixzz2Z7usHiFK\n};\n\n"],[0,"func"]],"start1":176,"start2":176,"length1":89,"length2":8}]],"length":1536,"saved":false}
{"ts":1373900589103,"patch":[[{"diffs":[[0,"unction("],[1,"firstOption, secondOption"],[0,") {\n    "]],"start1":121,"start2":121,"length1":16,"length2":41}]],"length":1561,"saved":false}
{"ts":1373900603874,"patch":[[{"diffs":[[0,"ion("],[-1,"firstOption, secondO"],[1,"o"],[0,"ption"],[1,"s"],[0,") {\n"]],"start1":125,"start2":125,"length1":33,"length2":15}]],"length":1543,"saved":false}
{"ts":1373900616606,"patch":[[{"diffs":[[0," >= "],[-1,"0.5"],[1,"1 / options.length"],[0,";\n  "]],"start1":168,"start2":168,"length1":11,"length2":26}]],"length":1558,"saved":false}
{"ts":1373900637799,"patch":[[{"diffs":[[0,"        "],[-1,"return "],[1,"var index = Math.floor("],[0,"Math.ran"]],"start1":140,"start2":140,"length1":23,"length2":39},{"diffs":[[0,"s.length"],[1,")"],[0,";\n    }\n"]],"start1":198,"start2":198,"length1":16,"length2":17}]],"length":1575,"saved":false}
{"ts":1373900648763,"patch":[[{"diffs":[[0,"ength);\n"],[1,"        return options[index];\n"],[0,"    }\n};"]],"start1":201,"start2":201,"length1":16,"length2":47}]],"length":1606,"saved":false}
{"ts":1373900660826,"patch":[[{"diffs":[[0,"om() >= "],[1,"("],[0,"1 / opti"]],"start1":180,"start2":180,"length1":16,"length2":17},{"diffs":[[0,".length)"],[1,")"],[0,";\n      "]],"start1":200,"start2":200,"length1":16,"length2":17}]],"length":1608,"saved":false}
{"ts":1373900713889,"patch":[[{"diffs":[[0,"ndom"],[-1,"Boolea"],[1,"Optio"],[0,"n: f"]],"start1":107,"start2":107,"length1":14,"length2":13}]],"length":1607,"saved":false}
{"contributors":[],"silentsave":false,"ts":1373962117794,"patch":[[{"diffs":[[0,"var "],[-1,"index = Math.floor(Math.random() >= (1 / options.length))"],[1,"split = 1 / options.length;\n        var rand = Math.random();\n        var index = rand / split"],[0,";\n  "]],"start1":147,"start2":147,"length1":65,"length2":102}]],"length":1644,"saved":false}
{"ts":1373962131457,"patch":[[{"diffs":[[0,"options["],[1,"Math.round("],[0,"index"],[1,")"],[0,"];\n    }"]],"start1":262,"start2":262,"length1":21,"length2":33}]],"length":1656,"saved":false}
{"ts":1373962400808,"patch":[[{"diffs":[[0,"lit)"],[-1," - 1"],[0,";\n  "]],"start1":243,"start2":243,"length1":12,"length2":8}]],"length":1658,"saved":false}
{"ts":1373962476169,"patch":[[{"diffs":[[0,"split);\n"],[1,"        index = Math.round(index);\n        index--;\n"],[0,"        "]],"start1":241,"start2":241,"length1":16,"length2":68}]],"length":1710,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374739413088,"patch":[[{"diffs":[[0,"index = "],[1,"("],[0,"rand / s"]],"start1":225,"start2":225,"length1":16,"length2":17},{"diffs":[[0," / split"],[1,")"],[0,";\n      "]],"start1":238,"start2":238,"length1":16,"length2":17},{"diffs":[[0,"ndex = Math."],[-1,"round"],[1,"floor"],[0,"(index);\n   "]],"start1":258,"start2":258,"length1":29,"length2":29},{"diffs":[[0,"    "],[1,"return options[Math.round("],[0,"index"],[-1,"--"],[1,")]"],[0,";\n    "],[-1,"    return options[Math.round(index"],[1,"}\n};\n\nUtils.ToStringMap = function() {\n    this.hashes = {};\n};\n\nUtils.ToStringMap.prototype = {\n    constructor: Utils.ToStringMap,\n\n    put: function( key, value ) {\n        this.hashes[key.toString()] = value;\n    },\n\n    get: function( key ) {\n        return this.hashes[key.toString("],[0,")];\n"]],"start1":288,"start2":288,"length1":56,"length2":335}]],"length":1989,"saved":false}
